diff --git a/node_modules/@livekit/react-components/dist/index.js b/node_modules/@livekit/react-components/dist/index.js
index d763d65..f8dd6e6 100644
--- a/node_modules/@livekit/react-components/dist/index.js
+++ b/node_modules/@livekit/react-components/dist/index.js
@@ -105,9 +105,9 @@ var AudioSelectButton = function AudioSelectButton(_ref) {
       onSourceSelected = _ref.onSourceSelected,
       isButtonDisabled = _ref.isButtonDisabled,
       _ref$muteText = _ref.muteText,
-      muteText = _ref$muteText === void 0 ? 'Mute' : _ref$muteText,
+      muteText = _ref$muteText === void 0 ? 'Mute?' : _ref$muteText,
       _ref$unmuteText = _ref.unmuteText,
-      unmuteText = _ref$unmuteText === void 0 ? 'Unmute' : _ref$unmuteText,
+      unmuteText = _ref$unmuteText === void 0 ? 'Unmute!' : _ref$unmuteText,
       className = _ref.className,
       popoverContainerClassName = _ref.popoverContainerClassName,
       popoverTriggerBtnClassName = _ref.popoverTriggerBtnClassName,
diff --git a/node_modules/@livekit/react-components/dist/index.js.map b/node_modules/@livekit/react-components/dist/index.js.map
index 6b19d0b..f9189c8 100644
--- a/node_modules/@livekit/react-components/dist/index.js.map
+++ b/node_modules/@livekit/react-components/dist/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":["../src/components/ControlButton.tsx","../src/components/AudioSelectButton.tsx","../src/components/VideoSelectButton.tsx","../src/components/ControlsView.tsx","../src/components/DisplayContext.tsx","../src/components/ParticipantView.tsx","../src/components/ScreenShareView.tsx","../src/components/desktop/GridStage.tsx","../src/components/StageUtils.ts","../src/components/desktop/SpeakerStage.tsx","../src/components/mobile/MobileStage.tsx","../src/components/StageView.tsx","../src/LiveKitRoom.tsx"],"sourcesContent":["import { faChevronDown, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { ReactElement, useState } from 'react';\nimport { Popover } from 'react-tiny-popover';\nimport styles from './styles.module.css';\n\nexport interface MenuItem {\n  label: string;\n}\ninterface ButtonProps {\n  label: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  icon?: IconDefinition;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n  menuItems?: MenuItem[];\n  onMenuItemClick?: (item: MenuItem) => void;\n}\n\nexport const ControlButton = ({\n  label,\n  disabled,\n  onClick,\n  icon,\n  className,\n  menuItems,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n  onMenuItemClick,\n}: ButtonProps) => {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  let classes = styles.button;\n  if (className) {\n    classes += ` ${className}`;\n  }\n\n  const handleMenuClick = (item: MenuItem) => {\n    setMenuVisible(false);\n    if (onMenuItemClick) {\n      onMenuItemClick(item);\n    }\n  };\n\n  let menuTrigger: ReactElement | undefined;\n  let menu: ReactElement = <div />;\n  if (menuItems && menuItems.length > 0) {\n    classes += ` ${styles.hasDropdown}`;\n    menuTrigger = (\n      <button\n        disabled={disabled}\n        className={`${styles.button} ${popoverTriggerBtnClassName}  ${styles.dropdown}`}\n        onClick={() => setMenuVisible(!menuVisible)}\n      >\n        <div className={`${styles.separator} ${popoverTriggerBtnSeparatorClassName}`} />\n        <FontAwesomeIcon height={32} icon={faChevronDown} />\n      </button>\n    );\n\n    menu = (\n      <div className={`${styles.popoverMenu} ${popoverContainerClassName}`}>\n        <ul className={styles.list}>\n          {menuItems?.map((item, i) => {\n            return (\n              <li key={i} onClick={() => handleMenuClick(item)}>\n                {item.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  const mainContent = (\n    <button\n      disabled={disabled}\n      className={classes}\n      onClick={() => {\n        setMenuVisible(false);\n        if (onClick) onClick();\n      }}\n    >\n      {icon && <FontAwesomeIcon className={styles.icon} height={32} icon={icon} />}\n      {label}\n    </button>\n  );\n\n  if (!menuTrigger) {\n    return mainContent;\n  }\n\n  return (\n    <Popover isOpen={menuVisible} positions={['top']} content={menu}>\n      <div className={styles.buttonWrapper}>\n        {mainContent}\n        {menuTrigger}\n      </div>\n    </Popover>\n  );\n};\n","import { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface AudioSelectButtonProps {\n  isMuted: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  isButtonDisabled?: boolean;\n  muteText?: string;\n  unmuteText?: string;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const AudioSelectButton = ({\n  isMuted,\n  onClick,\n  onSourceSelected,\n  isButtonDisabled,\n  muteText = 'Mute',\n  unmuteText = 'Unmute',\n  className,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: AudioSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listAudioDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('audioinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listAudioDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listAudioDevices);\n\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listAudioDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isMuted ? unmuteText : muteText}\n      icon={isMuted ? faMicrophoneSlash : faMicrophone}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faVideo, faVideoSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface VideoSelectButtonProps {\n  isEnabled: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  disableText?: string;\n  enableText?: string;\n  className?: string;\n  isButtonDisabled?: boolean;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const VideoSelectButton = ({\n  isEnabled,\n  onClick,\n  onSourceSelected,\n  disableText = 'Disable Video',\n  enableText = 'Enable Video',\n  className,\n  isButtonDisabled,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: VideoSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listVideoDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('videoinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listVideoDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listVideoDevices);\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listVideoDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isEnabled ? disableText : enableText}\n      icon={isEnabled ? faVideo : faVideoSlash}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faDesktop, faStop } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { ReactElement } from 'react';\nimport { useParticipant } from '@livekit/react-core';\nimport { AudioSelectButton } from './AudioSelectButton';\nimport { ControlButton } from './ControlButton';\nimport styles from './styles.module.css';\nimport { VideoSelectButton } from './VideoSelectButton';\n\nexport interface ControlsProps {\n  room: Room;\n  enableScreenShare?: boolean;\n  enableAudio?: boolean;\n  enableVideo?: boolean;\n  onLeave?: (room: Room) => void;\n}\n\nexport const ControlsView = ({\n  room,\n  enableScreenShare,\n  enableAudio,\n  enableVideo,\n  onLeave,\n}: ControlsProps) => {\n  const { cameraPublication: camPub, microphonePublication: micPub } = useParticipant(\n    room.localParticipant,\n  );\n\n  if (enableScreenShare === undefined) {\n    enableScreenShare = true;\n  }\n  if (enableVideo === undefined) {\n    enableVideo = true;\n  }\n  if (enableAudio === undefined) {\n    enableAudio = true;\n  }\n\n  const [audioButtonDisabled, setAudioButtonDisabled] = React.useState(false);\n  let muteButton: ReactElement | undefined;\n  if (enableAudio) {\n    const enabled = !(micPub?.isMuted ?? true);\n    muteButton = (\n      <AudioSelectButton\n        isMuted={!enabled}\n        isButtonDisabled={audioButtonDisabled}\n        onClick={async () => {\n          setAudioButtonDisabled(true);\n          room.localParticipant\n            .setMicrophoneEnabled(!enabled)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setAudioButtonDisabled(true);\n          room\n            .switchActiveDevice('audioinput', device.deviceId)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [videoButtonDisabled, setVideoButtonDisabled] = React.useState(false);\n\n  let videoButton: ReactElement | undefined;\n  if (enableVideo) {\n    const enabled = !(camPub?.isMuted ?? true);\n    videoButton = (\n      <VideoSelectButton\n        isEnabled={enabled}\n        isButtonDisabled={videoButtonDisabled}\n        onClick={() => {\n          setVideoButtonDisabled(true);\n          room.localParticipant\n            .setCameraEnabled(!enabled)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setVideoButtonDisabled(true);\n          room\n            .switchActiveDevice('videoinput', device.deviceId)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [screenButtonDisabled, setScreenButtonDisabled] = React.useState(false);\n  let screenButton: ReactElement | undefined;\n  if (enableScreenShare) {\n    const enabled = room.localParticipant.isScreenShareEnabled;\n    screenButton = (\n      <ControlButton\n        label={enabled ? 'Stop sharing' : 'Share screen'}\n        icon={enabled ? faStop : faDesktop}\n        disabled={screenButtonDisabled}\n        onClick={() => {\n          setScreenButtonDisabled(true);\n          room.localParticipant\n            .setScreenShareEnabled(!enabled)\n            .finally(() => setScreenButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.controlsWrapper}>\n      {muteButton}\n      {videoButton}\n      {screenButton}\n      {onLeave && (\n        <ControlButton\n          label=\"End\"\n          className={styles.dangerButton}\n          onClick={() => {\n            room.disconnect();\n            onLeave(room);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface DisplayOptions {\n  stageLayout?: string;\n  /** display debugging stats */\n  showStats?: boolean;\n}\n\nexport const DisplayContext = React.createContext<DisplayOptions>({\n  stageLayout: 'grid',\n  showStats: false,\n});\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Property } from 'csstype';\nimport { ConnectionQuality, LocalTrack, Participant, RemoteTrack } from 'livekit-client';\nimport { useParticipant, VideoRenderer } from '@livekit/react-core';\n\nimport { AspectRatio } from 'react-aspect-ratio';\nimport { ReactComponent as connectionQuality1 } from '../../static/connection-quality-1.svg';\nimport { ReactComponent as connectionQuality2 } from '../../static/connection-quality-2.svg';\nimport { ReactComponent as connectionQuality3 } from '../../static/connection-quality-3.svg';\nimport { DisplayContext } from './DisplayContext';\nimport styles from './styles.module.css';\n\nexport interface ParticipantProps {\n  participant: Participant;\n  displayName?: string;\n  // width in CSS\n  width?: Property.Width;\n  // height in CSS\n  height?: Property.Height;\n  className?: string;\n  // aspect ratio width, if set, maintains aspect ratio\n  aspectWidth?: number;\n  // aspect ratio height\n  aspectHeight?: number;\n  // determine whether to contain or cover video.\n  // cover mode is used when layout orientation matches video orientation\n  orientation?: 'landscape' | 'portrait';\n  // true if overlay with participant info should be shown\n  showOverlay?: boolean;\n  // true if connection quality should be shown\n  showConnectionQuality?: boolean;\n  // additional classname when participant is currently speaking\n  speakerClassName?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onClick?: () => void;\n}\n\nexport const ParticipantView = ({\n  participant,\n  width,\n  height,\n  className,\n  speakerClassName,\n  aspectWidth,\n  aspectHeight,\n  orientation,\n  displayName,\n  showOverlay,\n  showConnectionQuality,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}: ParticipantProps) => {\n  const { cameraPublication, isLocal, connectionQuality, isSpeaking } = useParticipant(participant);\n  const [videoSize, setVideoSize] = useState<string>();\n  const [currentBitrate, setCurrentBitrate] = useState<number>();\n  const context = useContext(DisplayContext);\n\n  const handleResize = useCallback((width: number, height: number) => {\n    setVideoSize(`${width}x${height}`);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let total = 0;\n      participant.tracks.forEach((pub) => {\n        if (pub.track instanceof LocalTrack || pub.track instanceof RemoteTrack) {\n          total += pub.track.currentBitrate;\n        }\n      });\n      setCurrentBitrate(total);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const containerStyles: CSSProperties = {\n    width: width,\n    height: height,\n  };\n\n  // when aspect matches, cover instead\n  let objectFit: Property.ObjectFit = 'contain';\n  let videoOrientation: 'landscape' | 'portrait' | undefined;\n  if (!orientation && aspectWidth && aspectHeight) {\n    orientation = aspectWidth > aspectHeight ? 'landscape' : 'portrait';\n  }\n  if (cameraPublication?.dimensions) {\n    videoOrientation =\n      cameraPublication.dimensions.width > cameraPublication.dimensions.height\n        ? 'landscape'\n        : 'portrait';\n  }\n\n  if (videoOrientation === orientation) {\n    objectFit = 'cover';\n  }\n\n  if (!displayName) {\n    displayName = participant.name || participant.identity;\n    if (isLocal) {\n      displayName += ' (You)';\n    }\n  }\n\n  let mainElement: ReactElement;\n  if (cameraPublication?.isSubscribed && cameraPublication?.track && !cameraPublication?.isMuted) {\n    mainElement = (\n      <VideoRenderer\n        track={cameraPublication.track}\n        isLocal={isLocal}\n        objectFit={objectFit}\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.video}\n        onSizeChanged={handleResize}\n      />\n    );\n  } else {\n    mainElement = <div className={styles.placeholder} />;\n  }\n\n  const classes = [styles.participant];\n  if (className) {\n    classes.push(className);\n  }\n  if (isSpeaking) {\n    classes.push(speakerClassName ?? styles.speaker);\n  }\n  const isAudioMuted = !participant.isMicrophoneEnabled;\n\n  // gather stats\n  let statsContent: ReactElement | undefined;\n  if (context.showStats) {\n    statsContent = (\n      <div className={styles.stats}>\n        <span>{videoSize}</span>\n        {currentBitrate !== undefined && currentBitrate > 0 && (\n          <span>&nbsp;{Math.round(currentBitrate / 1024)} kbps</span>\n        )}\n      </div>\n    );\n  }\n\n  let ConnectionQualityIndicator: typeof connectionQuality1 | undefined;\n  if (showConnectionQuality) {\n    switch (connectionQuality) {\n      case ConnectionQuality.Excellent:\n        ConnectionQualityIndicator = connectionQuality3;\n        break;\n      case ConnectionQuality.Good:\n        ConnectionQualityIndicator = connectionQuality2;\n        break;\n      case ConnectionQuality.Poor:\n        ConnectionQualityIndicator = connectionQuality1;\n        break;\n    }\n  }\n\n  return (\n    <div\n      className={classes.join(' ')}\n      style={containerStyles}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n    >\n      {aspectWidth && aspectHeight && (\n        <AspectRatio ratio={aspectWidth / aspectHeight}>{mainElement}</AspectRatio>\n      )}\n      {(!aspectWidth || !aspectHeight) && mainElement}\n\n      {(showOverlay || context.showStats) && (\n        <div className={styles.participantBar}>\n          <div className={styles.name}>{displayName}</div>\n          <div className={styles.center}>{statsContent}</div>\n          <div>{ConnectionQualityIndicator && <ConnectionQualityIndicator />}</div>\n          <div>\n            <FontAwesomeIcon\n              icon={isAudioMuted ? faMicrophoneSlash : faMicrophone}\n              height={24}\n              className={isAudioMuted ? styles.iconRed : styles.iconNormal}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Property } from 'csstype';\nimport { Track } from 'livekit-client';\nimport { VideoRenderer } from '@livekit/react-core';\n\nimport React from 'react';\nimport styles from './styles.module.css';\n\ninterface ScreenShareProps {\n  track: Track;\n  width?: Property.Width;\n  height?: Property.Height;\n}\n\nexport const ScreenShareView = ({ track, width, height }: ScreenShareProps) => {\n  return (\n    <div className={styles.screenShare}>\n      <VideoRenderer\n        track={track}\n        isLocal={false}\n        width={width}\n        height={height}\n        className={styles.video}\n      />\n    </div>\n  );\n};\n","import { Participant } from 'livekit-client';\nimport React, { useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { StageProps } from '../StageProps';\nimport styles from './styles.module.css';\n\nexport const GridStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [visibleParticipants, setVisibleParticipants] = useState<Participant[]>([]);\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [gridClass, setGridClass] = React.useState(styles.grid1x1);\n\n  // compute visible participants and sort.\n  useEffect(() => {\n    // determine grid size\n    let numVisible = 1;\n    if (participants.length === 1) {\n      setGridClass(styles.grid1x1);\n    } else if (participants.length === 2) {\n      setGridClass(styles.grid2x1);\n      numVisible = 2;\n    } else if (participants.length <= 4) {\n      setGridClass(styles.grid2x2);\n      numVisible = Math.min(participants.length, 4);\n    } else if (participants.length <= 9) {\n      setGridClass(styles.grid3x3);\n      numVisible = Math.min(participants.length, 9);\n    } else if (participants.length <= 16) {\n      setGridClass(styles.grid4x4);\n      numVisible = Math.min(participants.length, 16);\n    } else {\n      setGridClass(styles.grid5x5);\n      numVisible = Math.min(participants.length, 25);\n    }\n\n    // remove any participants that are no longer connected\n    const newParticipants: Participant[] = [];\n    visibleParticipants.forEach((p) => {\n      if (room?.participants.has(p.sid) || room?.localParticipant.sid === p.sid) {\n        newParticipants.push(p);\n      }\n    });\n\n    // ensure active speakers are all visible\n    room?.activeSpeakers?.forEach((speaker) => {\n      if (\n        newParticipants.includes(speaker) ||\n        (speaker !== room?.localParticipant && !room?.participants.has(speaker.sid))\n      ) {\n        return;\n      }\n      // find a non-active speaker and switch\n      const idx = newParticipants.findIndex((p) => !p.isSpeaking);\n      if (idx >= 0) {\n        newParticipants[idx] = speaker;\n      } else {\n        newParticipants.push(speaker);\n      }\n    });\n\n    // add other non speakers\n    for (const p of participants) {\n      if (newParticipants.length >= numVisible) {\n        break;\n      }\n      if (newParticipants.includes(p) || p.isSpeaking) {\n        continue;\n      }\n      newParticipants.push(p);\n    }\n\n    if (newParticipants.length > numVisible) {\n      newParticipants.splice(numVisible, newParticipants.length - numVisible);\n    }\n    setVisibleParticipants(newParticipants);\n  }, [participants]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (participants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={`${styles.gridStage} ${gridClass}`}>\n        {visibleParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              orientation=\"landscape\"\n              width=\"100%\"\n              height=\"100%\"\n              showOverlay={showOverlay}\n              showConnectionQuality\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { LocalParticipant, Participant } from 'livekit-client';\n\n/**\n * Default sort for participants, it'll order participants by:\n * 1. dominant speaker (speaker with the loudest audio level)\n * 2. local participant\n * 3. other speakers that are recently active\n * 4. participants with video on\n * 5. by joinedAt\n */\nexport function defaultSortParticipants(participants: Participant[]): Participant[] {\n  const sortedParticipants = [...participants];\n  sortedParticipants.sort((a, b) => {\n    // loudest speaker first\n    if (a.isSpeaking && b.isSpeaking) {\n      return b.audioLevel - a.audioLevel;\n    }\n\n    // speaker goes first\n    if (a.isSpeaking !== b.isSpeaking) {\n      if (a.isSpeaking) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // last active speaker first\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      const aLast = a.lastSpokeAt?.getTime() ?? 0;\n      const bLast = b.lastSpokeAt?.getTime() ?? 0;\n      return bLast - aLast;\n    }\n\n    // video on\n    const aVideo = a.videoTracks.size > 0;\n    const bVideo = b.videoTracks.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // joinedAt\n    return (a.joinedAt?.getTime() ?? 0) - (b.joinedAt?.getTime() ?? 0);\n  });\n  const localParticipant = sortedParticipants.find((p) => p instanceof LocalParticipant);\n  if (localParticipant) {\n    const localIdx = sortedParticipants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      sortedParticipants.splice(localIdx, 1);\n      if (sortedParticipants.length > 0) {\n        sortedParticipants.splice(1, 0, localParticipant);\n      } else {\n        sortedParticipants.push(localParticipant);\n      }\n    }\n  }\n  return sortedParticipants;\n}\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const SpeakerStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else {\n    [participantInFocus, ...otherParticipants] = sortedParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"landscape\"\n        showOverlay={showOverlay}\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>\n        <div className={styles.stageCenter}>{mainView}</div>\n        <div className={styles.sidebar}>\n          {otherParticipants.map((participant) => {\n            return (\n              <ParticipantRenderer\n                key={participant.identity}\n                participant={participant}\n                width=\"100%\"\n                aspectWidth={16}\n                aspectHeight={9}\n                showOverlay={showOverlay}\n                onMouseEnter={() => setShowOverlay(true)}\n                onMouseLeave={() => setShowOverlay(false)}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const MobileStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else if (otherParticipants.length === 0) {\n    mainView = <div>no one is in the room</div>;\n  } else {\n    [participantInFocus, ...otherParticipants] = otherParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        showOverlay={showOverlay}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"portrait\"\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>{mainView}</div>\n      <div className={styles.participantsArea}>\n        {otherParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              className={styles.participant}\n              aspectWidth={4}\n              aspectHeight={3}\n              showOverlay={showOverlay}\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} enableScreenShare={false} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Track, VideoTrack } from 'livekit-client';\nimport { AudioRenderer } from '@livekit/react-core';\nimport React, { ReactElement, useContext } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { GridStage } from './desktop/GridStage';\nimport { SpeakerStage } from './desktop/SpeakerStage';\nimport { DisplayContext } from './DisplayContext';\nimport { MobileStage } from './mobile/MobileStage';\nimport { StageProps } from './StageProps';\nimport styles from './styles.module.css';\n\nexport const StageView = (stageProps: StageProps) => {\n  const isMobile = useMediaQuery({ query: '(max-width: 800px)' });\n  const { room, participants } = stageProps.roomState;\n  const context = useContext(DisplayContext);\n\n  let mainElement: ReactElement;\n  if (isMobile) {\n    mainElement = <MobileStage {...stageProps} />;\n  } else {\n    // find first participant with screen shared\n    let screenTrack: VideoTrack | undefined;\n    participants.forEach((p) => {\n      if (screenTrack) {\n        return;\n      }\n      const track = p.getTrack(Track.Source.ScreenShare);\n      if (track?.isSubscribed && track.videoTrack) {\n        screenTrack = track.videoTrack;\n      }\n    });\n\n    if (context.stageLayout === 'grid' && screenTrack === undefined) {\n      mainElement = <GridStage {...stageProps} />;\n    } else {\n      mainElement = <SpeakerStage {...stageProps} />;\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      {mainElement}\n      {stageProps.roomState.audioTracks.map((track) => (\n        <AudioRenderer key={track.sid} track={track} isLocal={false} />\n      ))}\n\n      {room?.canPlaybackAudio === false && (\n        <div className={styles.overlay}>\n          <button\n            className={styles.unmuteButton}\n            onClick={() => {\n              room.startAudio();\n            }}\n          >\n            <FontAwesomeIcon className={styles.icon} size=\"1x\" icon={faVolumeMute} />\n            Click to Unmute\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Room, RoomOptions, RoomConnectOptions, ConnectionState } from 'livekit-client';\nimport React, { useEffect } from 'react';\nimport { ControlsProps } from './components/ControlsView';\nimport { ParticipantProps } from './components/ParticipantView';\nimport { StageProps } from './components/StageProps';\nimport { StageView } from './components/StageView';\nimport { useRoom } from '@livekit/react-core';\n\nexport interface RoomProps {\n  url: string;\n  token: string;\n  roomOptions?: RoomOptions;\n  connectOptions?: RoomConnectOptions;\n  // when first connected to room\n  onConnected?: (room: Room) => void;\n  // when user leaves the room\n  onLeave?: (room: Room) => void;\n  stageRenderer?: (props: StageProps) => React.ReactElement | null;\n  participantRenderer?: (props: ParticipantProps) => React.ReactElement | null;\n  controlRenderer?: (props: ControlsProps) => React.ReactElement | null;\n}\n\nexport const LiveKitRoom = ({\n  url,\n  token,\n  roomOptions,\n  connectOptions,\n  stageRenderer,\n  participantRenderer,\n  controlRenderer,\n  onConnected,\n  onLeave,\n}: RoomProps) => {\n  const roomState = useRoom(roomOptions);\n\n  useEffect(() => {\n    roomState.connect(url, token, connectOptions).then((room) => {\n      if (!room) {\n        return;\n      }\n      if (onConnected && room.state === ConnectionState.Connected) {\n        onConnected(room);\n      }\n    });\n  }, []);\n\n  const selectedStageRenderer = stageRenderer ?? StageView;\n\n  return selectedStageRenderer({\n    roomState,\n    participantRenderer,\n    controlRenderer,\n    onLeave,\n  });\n};\n"],"names":["ControlButton","label","disabled","onClick","icon","className","menuItems","popoverContainerClassName","popoverTriggerBtnClassName","popoverTriggerBtnSeparatorClassName","onMenuItemClick","useState","menuVisible","setMenuVisible","classes","styles","button","handleMenuClick","item","menuTrigger","menu","React","length","hasDropdown","dropdown","separator","FontAwesomeIcon","height","faChevronDown","popoverMenu","list","map","i","key","mainContent","Popover","isOpen","positions","content","buttonWrapper","AudioSelectButton","isMuted","onSourceSelected","isButtonDisabled","muteText","unmuteText","sources","setSources","setMenuItems","listAudioDevices","useCallback","Room","getLocalDevices","devices","useEffect","navigator","mediaDevices","addEventListener","removeEventListener","handleMenuItem","device","find","d","faMicrophoneSlash","faMicrophone","VideoSelectButton","isEnabled","disableText","enableText","listVideoDevices","faVideo","faVideoSlash","ControlsView","room","enableScreenShare","enableAudio","enableVideo","onLeave","useParticipant","localParticipant","camPub","cameraPublication","micPub","microphonePublication","undefined","audioButtonDisabled","setAudioButtonDisabled","muteButton","enabled","setMicrophoneEnabled","switchActiveDevice","deviceId","videoButtonDisabled","setVideoButtonDisabled","videoButton","setCameraEnabled","screenButtonDisabled","setScreenButtonDisabled","screenButton","isScreenShareEnabled","faStop","faDesktop","setScreenShareEnabled","controlsWrapper","dangerButton","disconnect","DisplayContext","createContext","stageLayout","showStats","ParticipantView","participant","width","speakerClassName","aspectWidth","aspectHeight","orientation","displayName","showOverlay","showConnectionQuality","onMouseEnter","onMouseLeave","isLocal","connectionQuality","isSpeaking","videoSize","setVideoSize","currentBitrate","setCurrentBitrate","context","useContext","handleResize","interval","setInterval","total","tracks","forEach","pub","track","LocalTrack","RemoteTrack","clearInterval","containerStyles","objectFit","videoOrientation","dimensions","name","identity","mainElement","isSubscribed","VideoRenderer","video","onSizeChanged","placeholder","push","speaker","isAudioMuted","isMicrophoneEnabled","statsContent","stats","Math","round","ConnectionQualityIndicator","ConnectionQuality","Excellent","connectionQuality3","Good","connectionQuality2","Poor","connectionQuality1","join","style","AspectRatio","ratio","participantBar","center","iconRed","iconNormal","ScreenShareView","screenShare","GridStage","roomState","participantRenderer","controlRenderer","isConnecting","error","participants","visibleParticipants","setVisibleParticipants","setShowOverlay","grid1x1","gridClass","setGridClass","numVisible","grid2x1","grid2x2","min","grid3x3","grid4x4","grid5x5","newParticipants","p","has","sid","activeSpeakers","includes","idx","findIndex","splice","message","ParticipantRenderer","ControlRenderer","container","gridStage","controlsArea","defaultSortParticipants","sortedParticipants","sort","a","b","audioLevel","lastSpokeAt","aLast","getTime","bLast","aVideo","videoTracks","size","bVideo","joinedAt","LocalParticipant","localIdx","indexOf","SpeakerStage","sortParticipants","sortFn","setSortedParticipants","screenTrack","getTrack","Track","Source","ScreenShare","videoTrack","otherParticipants","participantInFocus","mainView","stage","stageCenter","sidebar","MobileStage","participantsArea","StageView","stageProps","isMobile","useMediaQuery","query","audioTracks","AudioRenderer","canPlaybackAudio","overlay","unmuteButton","startAudio","faVolumeMute","LiveKitRoom","url","token","roomOptions","connectOptions","stageRenderer","onConnected","useRoom","connect","then","state","ConnectionState","Connected","selectedStageRenderer"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":["../src/components/ControlButton.tsx","../src/components/AudioSelectButton.tsx","../src/components/VideoSelectButton.tsx","../src/components/ControlsView.tsx","../src/components/DisplayContext.tsx","../src/components/ParticipantView.tsx","../src/components/ScreenShareView.tsx","../src/components/desktop/GridStage.tsx","../src/components/StageUtils.ts","../src/components/desktop/SpeakerStage.tsx","../src/components/mobile/MobileStage.tsx","../src/components/StageView.tsx","../src/LiveKitRoom.tsx"],"sourcesContent":["import { faChevronDown, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { ReactElement, useState } from 'react';\nimport { Popover } from 'react-tiny-popover';\nimport styles from './styles.module.css';\n\nexport interface MenuItem {\n  label: string;\n}\ninterface ButtonProps {\n  label: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  icon?: IconDefinition;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n  menuItems?: MenuItem[];\n  onMenuItemClick?: (item: MenuItem) => void;\n}\n\nexport const ControlButton = ({\n  label,\n  disabled,\n  onClick,\n  icon,\n  className,\n  menuItems,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n  onMenuItemClick,\n}: ButtonProps) => {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  let classes = styles.button;\n  if (className) {\n    classes += ` ${className}`;\n  }\n\n  const handleMenuClick = (item: MenuItem) => {\n    setMenuVisible(false);\n    if (onMenuItemClick) {\n      onMenuItemClick(item);\n    }\n  };\n\n  let menuTrigger: ReactElement | undefined;\n  let menu: ReactElement = <div />;\n  if (menuItems && menuItems.length > 0) {\n    classes += ` ${styles.hasDropdown}`;\n    menuTrigger = (\n      <button\n        disabled={disabled}\n        className={`${styles.button} ${popoverTriggerBtnClassName}  ${styles.dropdown}`}\n        onClick={() => setMenuVisible(!menuVisible)}\n      >\n        <div className={`${styles.separator} ${popoverTriggerBtnSeparatorClassName}`} />\n        <FontAwesomeIcon height={32} icon={faChevronDown} />\n      </button>\n    );\n\n    menu = (\n      <div className={`${styles.popoverMenu} ${popoverContainerClassName}`}>\n        <ul className={styles.list}>\n          {menuItems?.map((item, i) => {\n            return (\n              <li key={i} onClick={() => handleMenuClick(item)}>\n                {item.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  const mainContent = (\n    <button\n      disabled={disabled}\n      className={classes}\n      onClick={() => {\n        setMenuVisible(false);\n        if (onClick) onClick();\n      }}\n    >\n      {icon && <FontAwesomeIcon className={styles.icon} height={32} icon={icon} />}\n      {label}\n    </button>\n  );\n\n  if (!menuTrigger) {\n    return mainContent;\n  }\n\n  return (\n    <Popover isOpen={menuVisible} positions={['top']} content={menu}>\n      <div className={styles.buttonWrapper}>\n        {mainContent}\n        {menuTrigger}\n      </div>\n    </Popover>\n  );\n};\n","import { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface AudioSelectButtonProps {\n  isMuted: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  isButtonDisabled?: boolean;\n  muteText?: string;\n  unmuteText?: string;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const AudioSelectButton = ({\n  isMuted,\n  onClick,\n  onSourceSelected,\n  isButtonDisabled,\n  muteText = 'Mute?',\n  unmuteText = 'Unmute!',\n  className,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: AudioSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listAudioDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('audioinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listAudioDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listAudioDevices);\n\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listAudioDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isMuted ? unmuteText : muteText}\n      icon={isMuted ? faMicrophoneSlash : faMicrophone}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faVideo, faVideoSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface VideoSelectButtonProps {\n  isEnabled: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  disableText?: string;\n  enableText?: string;\n  className?: string;\n  isButtonDisabled?: boolean;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const VideoSelectButton = ({\n  isEnabled,\n  onClick,\n  onSourceSelected,\n  disableText = 'Disable Video',\n  enableText = 'Enable Video',\n  className,\n  isButtonDisabled,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: VideoSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listVideoDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('videoinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listVideoDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listVideoDevices);\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listVideoDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isEnabled ? disableText : enableText}\n      icon={isEnabled ? faVideo : faVideoSlash}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faDesktop, faStop } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { ReactElement } from 'react';\nimport { useParticipant } from '@livekit/react-core';\nimport { AudioSelectButton } from './AudioSelectButton';\nimport { ControlButton } from './ControlButton';\nimport styles from './styles.module.css';\nimport { VideoSelectButton } from './VideoSelectButton';\n\nexport interface ControlsProps {\n  room: Room;\n  enableScreenShare?: boolean;\n  enableAudio?: boolean;\n  enableVideo?: boolean;\n  onLeave?: (room: Room) => void;\n}\n\nexport const ControlsView = ({\n  room,\n  enableScreenShare,\n  enableAudio,\n  enableVideo,\n  onLeave,\n}: ControlsProps) => {\n  const { cameraPublication: camPub, microphonePublication: micPub } = useParticipant(\n    room.localParticipant,\n  );\n\n  if (enableScreenShare === undefined) {\n    enableScreenShare = true;\n  }\n  if (enableVideo === undefined) {\n    enableVideo = true;\n  }\n  if (enableAudio === undefined) {\n    enableAudio = true;\n  }\n\n  const [audioButtonDisabled, setAudioButtonDisabled] = React.useState(false);\n  let muteButton: ReactElement | undefined;\n  if (enableAudio) {\n    const enabled = !(micPub?.isMuted ?? true);\n    muteButton = (\n      <AudioSelectButton\n        isMuted={!enabled}\n        isButtonDisabled={audioButtonDisabled}\n        onClick={async () => {\n          setAudioButtonDisabled(true);\n          room.localParticipant\n            .setMicrophoneEnabled(!enabled)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setAudioButtonDisabled(true);\n          room\n            .switchActiveDevice('audioinput', device.deviceId)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [videoButtonDisabled, setVideoButtonDisabled] = React.useState(false);\n\n  let videoButton: ReactElement | undefined;\n  if (enableVideo) {\n    const enabled = !(camPub?.isMuted ?? true);\n    videoButton = (\n      <VideoSelectButton\n        isEnabled={enabled}\n        isButtonDisabled={videoButtonDisabled}\n        onClick={() => {\n          setVideoButtonDisabled(true);\n          room.localParticipant\n            .setCameraEnabled(!enabled)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setVideoButtonDisabled(true);\n          room\n            .switchActiveDevice('videoinput', device.deviceId)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [screenButtonDisabled, setScreenButtonDisabled] = React.useState(false);\n  let screenButton: ReactElement | undefined;\n  if (enableScreenShare) {\n    const enabled = room.localParticipant.isScreenShareEnabled;\n    screenButton = (\n      <ControlButton\n        label={enabled ? 'Stop sharing' : 'Share screen'}\n        icon={enabled ? faStop : faDesktop}\n        disabled={screenButtonDisabled}\n        onClick={() => {\n          setScreenButtonDisabled(true);\n          room.localParticipant\n            .setScreenShareEnabled(!enabled)\n            .finally(() => setScreenButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.controlsWrapper}>\n      {muteButton}\n      {videoButton}\n      {screenButton}\n      {onLeave && (\n        <ControlButton\n          label=\"End\"\n          className={styles.dangerButton}\n          onClick={() => {\n            room.disconnect();\n            onLeave(room);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface DisplayOptions {\n  stageLayout?: string;\n  /** display debugging stats */\n  showStats?: boolean;\n}\n\nexport const DisplayContext = React.createContext<DisplayOptions>({\n  stageLayout: 'grid',\n  showStats: false,\n});\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Property } from 'csstype';\nimport { ConnectionQuality, LocalTrack, Participant, RemoteTrack } from 'livekit-client';\nimport { useParticipant, VideoRenderer } from '@livekit/react-core';\n\nimport { AspectRatio } from 'react-aspect-ratio';\nimport { ReactComponent as connectionQuality1 } from '../../static/connection-quality-1.svg';\nimport { ReactComponent as connectionQuality2 } from '../../static/connection-quality-2.svg';\nimport { ReactComponent as connectionQuality3 } from '../../static/connection-quality-3.svg';\nimport { DisplayContext } from './DisplayContext';\nimport styles from './styles.module.css';\n\nexport interface ParticipantProps {\n  participant: Participant;\n  displayName?: string;\n  // width in CSS\n  width?: Property.Width;\n  // height in CSS\n  height?: Property.Height;\n  className?: string;\n  // aspect ratio width, if set, maintains aspect ratio\n  aspectWidth?: number;\n  // aspect ratio height\n  aspectHeight?: number;\n  // determine whether to contain or cover video.\n  // cover mode is used when layout orientation matches video orientation\n  orientation?: 'landscape' | 'portrait';\n  // true if overlay with participant info should be shown\n  showOverlay?: boolean;\n  // true if connection quality should be shown\n  showConnectionQuality?: boolean;\n  // additional classname when participant is currently speaking\n  speakerClassName?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onClick?: () => void;\n}\n\nexport const ParticipantView = ({\n  participant,\n  width,\n  height,\n  className,\n  speakerClassName,\n  aspectWidth,\n  aspectHeight,\n  orientation,\n  displayName,\n  showOverlay,\n  showConnectionQuality,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}: ParticipantProps) => {\n  const { cameraPublication, isLocal, connectionQuality, isSpeaking } = useParticipant(participant);\n  const [videoSize, setVideoSize] = useState<string>();\n  const [currentBitrate, setCurrentBitrate] = useState<number>();\n  const context = useContext(DisplayContext);\n\n  const handleResize = useCallback((width: number, height: number) => {\n    setVideoSize(`${width}x${height}`);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let total = 0;\n      participant.tracks.forEach((pub) => {\n        if (pub.track instanceof LocalTrack || pub.track instanceof RemoteTrack) {\n          total += pub.track.currentBitrate;\n        }\n      });\n      setCurrentBitrate(total);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const containerStyles: CSSProperties = {\n    width: width,\n    height: height,\n  };\n\n  // when aspect matches, cover instead\n  let objectFit: Property.ObjectFit = 'contain';\n  let videoOrientation: 'landscape' | 'portrait' | undefined;\n  if (!orientation && aspectWidth && aspectHeight) {\n    orientation = aspectWidth > aspectHeight ? 'landscape' : 'portrait';\n  }\n  if (cameraPublication?.dimensions) {\n    videoOrientation =\n      cameraPublication.dimensions.width > cameraPublication.dimensions.height\n        ? 'landscape'\n        : 'portrait';\n  }\n\n  if (videoOrientation === orientation) {\n    objectFit = 'cover';\n  }\n\n  if (!displayName) {\n    displayName = participant.name || participant.identity;\n    if (isLocal) {\n      displayName += ' (You)';\n    }\n  }\n\n  let mainElement: ReactElement;\n  if (cameraPublication?.isSubscribed && cameraPublication?.track && !cameraPublication?.isMuted) {\n    mainElement = (\n      <VideoRenderer\n        track={cameraPublication.track}\n        isLocal={isLocal}\n        objectFit={objectFit}\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.video}\n        onSizeChanged={handleResize}\n      />\n    );\n  } else {\n    mainElement = <div className={styles.placeholder} />;\n  }\n\n  const classes = [styles.participant];\n  if (className) {\n    classes.push(className);\n  }\n  if (isSpeaking) {\n    classes.push(speakerClassName ?? styles.speaker);\n  }\n  const isAudioMuted = !participant.isMicrophoneEnabled;\n\n  // gather stats\n  let statsContent: ReactElement | undefined;\n  if (context.showStats) {\n    statsContent = (\n      <div className={styles.stats}>\n        <span>{videoSize}</span>\n        {currentBitrate !== undefined && currentBitrate > 0 && (\n          <span>&nbsp;{Math.round(currentBitrate / 1024)} kbps</span>\n        )}\n      </div>\n    );\n  }\n\n  let ConnectionQualityIndicator: typeof connectionQuality1 | undefined;\n  if (showConnectionQuality) {\n    switch (connectionQuality) {\n      case ConnectionQuality.Excellent:\n        ConnectionQualityIndicator = connectionQuality3;\n        break;\n      case ConnectionQuality.Good:\n        ConnectionQualityIndicator = connectionQuality2;\n        break;\n      case ConnectionQuality.Poor:\n        ConnectionQualityIndicator = connectionQuality1;\n        break;\n    }\n  }\n\n  return (\n    <div\n      className={classes.join(' ')}\n      style={containerStyles}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n    >\n      {aspectWidth && aspectHeight && (\n        <AspectRatio ratio={aspectWidth / aspectHeight}>{mainElement}</AspectRatio>\n      )}\n      {(!aspectWidth || !aspectHeight) && mainElement}\n\n      {(showOverlay || context.showStats) && (\n        <div className={styles.participantBar}>\n          <div className={styles.name}>{displayName}</div>\n          <div className={styles.center}>{statsContent}</div>\n          <div>{ConnectionQualityIndicator && <ConnectionQualityIndicator />}</div>\n          <div>\n            <FontAwesomeIcon\n              icon={isAudioMuted ? faMicrophoneSlash : faMicrophone}\n              height={24}\n              className={isAudioMuted ? styles.iconRed : styles.iconNormal}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Property } from 'csstype';\nimport { Track } from 'livekit-client';\nimport { VideoRenderer } from '@livekit/react-core';\n\nimport React from 'react';\nimport styles from './styles.module.css';\n\ninterface ScreenShareProps {\n  track: Track;\n  width?: Property.Width;\n  height?: Property.Height;\n}\n\nexport const ScreenShareView = ({ track, width, height }: ScreenShareProps) => {\n  return (\n    <div className={styles.screenShare}>\n      <VideoRenderer\n        track={track}\n        isLocal={false}\n        width={width}\n        height={height}\n        className={styles.video}\n      />\n    </div>\n  );\n};\n","import { Participant } from 'livekit-client';\nimport React, { useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { StageProps } from '../StageProps';\nimport styles from './styles.module.css';\n\nexport const GridStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [visibleParticipants, setVisibleParticipants] = useState<Participant[]>([]);\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [gridClass, setGridClass] = React.useState(styles.grid1x1);\n\n  // compute visible participants and sort.\n  useEffect(() => {\n    // determine grid size\n    let numVisible = 1;\n    if (participants.length === 1) {\n      setGridClass(styles.grid1x1);\n    } else if (participants.length === 2) {\n      setGridClass(styles.grid2x1);\n      numVisible = 2;\n    } else if (participants.length <= 4) {\n      setGridClass(styles.grid2x2);\n      numVisible = Math.min(participants.length, 4);\n    } else if (participants.length <= 9) {\n      setGridClass(styles.grid3x3);\n      numVisible = Math.min(participants.length, 9);\n    } else if (participants.length <= 16) {\n      setGridClass(styles.grid4x4);\n      numVisible = Math.min(participants.length, 16);\n    } else {\n      setGridClass(styles.grid5x5);\n      numVisible = Math.min(participants.length, 25);\n    }\n\n    // remove any participants that are no longer connected\n    const newParticipants: Participant[] = [];\n    visibleParticipants.forEach((p) => {\n      if (room?.participants.has(p.sid) || room?.localParticipant.sid === p.sid) {\n        newParticipants.push(p);\n      }\n    });\n\n    // ensure active speakers are all visible\n    room?.activeSpeakers?.forEach((speaker) => {\n      if (\n        newParticipants.includes(speaker) ||\n        (speaker !== room?.localParticipant && !room?.participants.has(speaker.sid))\n      ) {\n        return;\n      }\n      // find a non-active speaker and switch\n      const idx = newParticipants.findIndex((p) => !p.isSpeaking);\n      if (idx >= 0) {\n        newParticipants[idx] = speaker;\n      } else {\n        newParticipants.push(speaker);\n      }\n    });\n\n    // add other non speakers\n    for (const p of participants) {\n      if (newParticipants.length >= numVisible) {\n        break;\n      }\n      if (newParticipants.includes(p) || p.isSpeaking) {\n        continue;\n      }\n      newParticipants.push(p);\n    }\n\n    if (newParticipants.length > numVisible) {\n      newParticipants.splice(numVisible, newParticipants.length - numVisible);\n    }\n    setVisibleParticipants(newParticipants);\n  }, [participants]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (participants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={`${styles.gridStage} ${gridClass}`}>\n        {visibleParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              orientation=\"landscape\"\n              width=\"100%\"\n              height=\"100%\"\n              showOverlay={showOverlay}\n              showConnectionQuality\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { LocalParticipant, Participant } from 'livekit-client';\n\n/**\n * Default sort for participants, it'll order participants by:\n * 1. dominant speaker (speaker with the loudest audio level)\n * 2. local participant\n * 3. other speakers that are recently active\n * 4. participants with video on\n * 5. by joinedAt\n */\nexport function defaultSortParticipants(participants: Participant[]): Participant[] {\n  const sortedParticipants = [...participants];\n  sortedParticipants.sort((a, b) => {\n    // loudest speaker first\n    if (a.isSpeaking && b.isSpeaking) {\n      return b.audioLevel - a.audioLevel;\n    }\n\n    // speaker goes first\n    if (a.isSpeaking !== b.isSpeaking) {\n      if (a.isSpeaking) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // last active speaker first\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      const aLast = a.lastSpokeAt?.getTime() ?? 0;\n      const bLast = b.lastSpokeAt?.getTime() ?? 0;\n      return bLast - aLast;\n    }\n\n    // video on\n    const aVideo = a.videoTracks.size > 0;\n    const bVideo = b.videoTracks.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // joinedAt\n    return (a.joinedAt?.getTime() ?? 0) - (b.joinedAt?.getTime() ?? 0);\n  });\n  const localParticipant = sortedParticipants.find((p) => p instanceof LocalParticipant);\n  if (localParticipant) {\n    const localIdx = sortedParticipants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      sortedParticipants.splice(localIdx, 1);\n      if (sortedParticipants.length > 0) {\n        sortedParticipants.splice(1, 0, localParticipant);\n      } else {\n        sortedParticipants.push(localParticipant);\n      }\n    }\n  }\n  return sortedParticipants;\n}\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const SpeakerStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else {\n    [participantInFocus, ...otherParticipants] = sortedParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"landscape\"\n        showOverlay={showOverlay}\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>\n        <div className={styles.stageCenter}>{mainView}</div>\n        <div className={styles.sidebar}>\n          {otherParticipants.map((participant) => {\n            return (\n              <ParticipantRenderer\n                key={participant.identity}\n                participant={participant}\n                width=\"100%\"\n                aspectWidth={16}\n                aspectHeight={9}\n                showOverlay={showOverlay}\n                onMouseEnter={() => setShowOverlay(true)}\n                onMouseLeave={() => setShowOverlay(false)}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const MobileStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else if (otherParticipants.length === 0) {\n    mainView = <div>no one is in the room</div>;\n  } else {\n    [participantInFocus, ...otherParticipants] = otherParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        showOverlay={showOverlay}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"portrait\"\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>{mainView}</div>\n      <div className={styles.participantsArea}>\n        {otherParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              className={styles.participant}\n              aspectWidth={4}\n              aspectHeight={3}\n              showOverlay={showOverlay}\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} enableScreenShare={false} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Track, VideoTrack } from 'livekit-client';\nimport { AudioRenderer } from '@livekit/react-core';\nimport React, { ReactElement, useContext } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { GridStage } from './desktop/GridStage';\nimport { SpeakerStage } from './desktop/SpeakerStage';\nimport { DisplayContext } from './DisplayContext';\nimport { MobileStage } from './mobile/MobileStage';\nimport { StageProps } from './StageProps';\nimport styles from './styles.module.css';\n\nexport const StageView = (stageProps: StageProps) => {\n  const isMobile = useMediaQuery({ query: '(max-width: 800px)' });\n  const { room, participants } = stageProps.roomState;\n  const context = useContext(DisplayContext);\n\n  let mainElement: ReactElement;\n  if (isMobile) {\n    mainElement = <MobileStage {...stageProps} />;\n  } else {\n    // find first participant with screen shared\n    let screenTrack: VideoTrack | undefined;\n    participants.forEach((p) => {\n      if (screenTrack) {\n        return;\n      }\n      const track = p.getTrack(Track.Source.ScreenShare);\n      if (track?.isSubscribed && track.videoTrack) {\n        screenTrack = track.videoTrack;\n      }\n    });\n\n    if (context.stageLayout === 'grid' && screenTrack === undefined) {\n      mainElement = <GridStage {...stageProps} />;\n    } else {\n      mainElement = <SpeakerStage {...stageProps} />;\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      {mainElement}\n      {stageProps.roomState.audioTracks.map((track) => (\n        <AudioRenderer key={track.sid} track={track} isLocal={false} />\n      ))}\n\n      {room?.canPlaybackAudio === false && (\n        <div className={styles.overlay}>\n          <button\n            className={styles.unmuteButton}\n            onClick={() => {\n              room.startAudio();\n            }}\n          >\n            <FontAwesomeIcon className={styles.icon} size=\"1x\" icon={faVolumeMute} />\n            Click to Unmute\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Room, RoomOptions, RoomConnectOptions, ConnectionState } from 'livekit-client';\nimport React, { useEffect } from 'react';\nimport { ControlsProps } from './components/ControlsView';\nimport { ParticipantProps } from './components/ParticipantView';\nimport { StageProps } from './components/StageProps';\nimport { StageView } from './components/StageView';\nimport { useRoom } from '@livekit/react-core';\n\nexport interface RoomProps {\n  url: string;\n  token: string;\n  roomOptions?: RoomOptions;\n  connectOptions?: RoomConnectOptions;\n  // when first connected to room\n  onConnected?: (room: Room) => void;\n  // when user leaves the room\n  onLeave?: (room: Room) => void;\n  stageRenderer?: (props: StageProps) => React.ReactElement | null;\n  participantRenderer?: (props: ParticipantProps) => React.ReactElement | null;\n  controlRenderer?: (props: ControlsProps) => React.ReactElement | null;\n}\n\nexport const LiveKitRoom = ({\n  url,\n  token,\n  roomOptions,\n  connectOptions,\n  stageRenderer,\n  participantRenderer,\n  controlRenderer,\n  onConnected,\n  onLeave,\n}: RoomProps) => {\n  const roomState = useRoom(roomOptions);\n\n  useEffect(() => {\n    roomState.connect(url, token, connectOptions).then((room) => {\n      if (!room) {\n        return;\n      }\n      if (onConnected && room.state === ConnectionState.Connected) {\n        onConnected(room);\n      }\n    });\n  }, []);\n\n  const selectedStageRenderer = stageRenderer ?? StageView;\n\n  return selectedStageRenderer({\n    roomState,\n    participantRenderer,\n    controlRenderer,\n    onLeave,\n  });\n};\n"],"names":["ControlButton","label","disabled","onClick","icon","className","menuItems","popoverContainerClassName","popoverTriggerBtnClassName","popoverTriggerBtnSeparatorClassName","onMenuItemClick","useState","menuVisible","setMenuVisible","classes","styles","button","handleMenuClick","item","menuTrigger","menu","React","length","hasDropdown","dropdown","separator","FontAwesomeIcon","height","faChevronDown","popoverMenu","list","map","i","key","mainContent","Popover","isOpen","positions","content","buttonWrapper","AudioSelectButton","isMuted","onSourceSelected","isButtonDisabled","muteText","unmuteText","sources","setSources","setMenuItems","listAudioDevices","useCallback","Room","getLocalDevices","devices","useEffect","navigator","mediaDevices","addEventListener","removeEventListener","handleMenuItem","device","find","d","faMicrophoneSlash","faMicrophone","VideoSelectButton","isEnabled","disableText","enableText","listVideoDevices","faVideo","faVideoSlash","ControlsView","room","enableScreenShare","enableAudio","enableVideo","onLeave","useParticipant","localParticipant","camPub","cameraPublication","micPub","microphonePublication","undefined","audioButtonDisabled","setAudioButtonDisabled","muteButton","enabled","setMicrophoneEnabled","switchActiveDevice","deviceId","videoButtonDisabled","setVideoButtonDisabled","videoButton","setCameraEnabled","screenButtonDisabled","setScreenButtonDisabled","screenButton","isScreenShareEnabled","faStop","faDesktop","setScreenShareEnabled","controlsWrapper","dangerButton","disconnect","DisplayContext","createContext","stageLayout","showStats","ParticipantView","participant","width","speakerClassName","aspectWidth","aspectHeight","orientation","displayName","showOverlay","showConnectionQuality","onMouseEnter","onMouseLeave","isLocal","connectionQuality","isSpeaking","videoSize","setVideoSize","currentBitrate","setCurrentBitrate","context","useContext","handleResize","interval","setInterval","total","tracks","forEach","pub","track","LocalTrack","RemoteTrack","clearInterval","containerStyles","objectFit","videoOrientation","dimensions","name","identity","mainElement","isSubscribed","VideoRenderer","video","onSizeChanged","placeholder","push","speaker","isAudioMuted","isMicrophoneEnabled","statsContent","stats","Math","round","ConnectionQualityIndicator","ConnectionQuality","Excellent","connectionQuality3","Good","connectionQuality2","Poor","connectionQuality1","join","style","AspectRatio","ratio","participantBar","center","iconRed","iconNormal","ScreenShareView","screenShare","GridStage","roomState","participantRenderer","controlRenderer","isConnecting","error","participants","visibleParticipants","setVisibleParticipants","setShowOverlay","grid1x1","gridClass","setGridClass","numVisible","grid2x1","grid2x2","min","grid3x3","grid4x4","grid5x5","newParticipants","p","has","sid","activeSpeakers","includes","idx","findIndex","splice","message","ParticipantRenderer","ControlRenderer","container","gridStage","controlsArea","defaultSortParticipants","sortedParticipants","sort","a","b","audioLevel","lastSpokeAt","aLast","getTime","bLast","aVideo","videoTracks","size","bVideo","joinedAt","LocalParticipant","localIdx","indexOf","SpeakerStage","sortParticipants","sortFn","setSortedParticipants","screenTrack","getTrack","Track","Source","ScreenShare","videoTrack","otherParticipants","participantInFocus","mainView","stage","stageCenter","sidebar","MobileStage","participantsArea","StageView","stageProps","isMobile","useMediaQuery","query","audioTracks","AudioRenderer","canPlaybackAudio","overlay","unmuteButton","startAudio","faVolumeMute","LiveKitRoom","url","token","roomOptions","connectOptions","stageRenderer","onConnected","useRoom","connect","then","state","ConnectionState","Connected","selectedStageRenderer"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@livekit/react-components/dist/index.modern.js b/node_modules/@livekit/react-components/dist/index.modern.js
index 182c233..8ec9a5a 100644
--- a/node_modules/@livekit/react-components/dist/index.modern.js
+++ b/node_modules/@livekit/react-components/dist/index.modern.js
@@ -103,9 +103,9 @@ var AudioSelectButton = function AudioSelectButton(_ref) {
       onSourceSelected = _ref.onSourceSelected,
       isButtonDisabled = _ref.isButtonDisabled,
       _ref$muteText = _ref.muteText,
-      muteText = _ref$muteText === void 0 ? 'Mute' : _ref$muteText,
+      muteText = _ref$muteText === void 0 ? 'Mute?' : _ref$muteText,
       _ref$unmuteText = _ref.unmuteText,
-      unmuteText = _ref$unmuteText === void 0 ? 'Unmute' : _ref$unmuteText,
+      unmuteText = _ref$unmuteText === void 0 ? 'Unmute!' : _ref$unmuteText,
       className = _ref.className,
       popoverContainerClassName = _ref.popoverContainerClassName,
       popoverTriggerBtnClassName = _ref.popoverTriggerBtnClassName,
diff --git a/node_modules/@livekit/react-components/dist/index.modern.js.map b/node_modules/@livekit/react-components/dist/index.modern.js.map
index 0d7aac6..ea6b6e7 100644
--- a/node_modules/@livekit/react-components/dist/index.modern.js.map
+++ b/node_modules/@livekit/react-components/dist/index.modern.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.modern.js","sources":["../src/components/ControlButton.tsx","../src/components/AudioSelectButton.tsx","../src/components/VideoSelectButton.tsx","../src/components/ControlsView.tsx","../src/components/DisplayContext.tsx","../src/components/ParticipantView.tsx","../src/components/ScreenShareView.tsx","../src/components/desktop/GridStage.tsx","../src/components/StageUtils.ts","../src/components/desktop/SpeakerStage.tsx","../src/components/mobile/MobileStage.tsx","../src/components/StageView.tsx","../src/LiveKitRoom.tsx"],"sourcesContent":["import { faChevronDown, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { ReactElement, useState } from 'react';\nimport { Popover } from 'react-tiny-popover';\nimport styles from './styles.module.css';\n\nexport interface MenuItem {\n  label: string;\n}\ninterface ButtonProps {\n  label: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  icon?: IconDefinition;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n  menuItems?: MenuItem[];\n  onMenuItemClick?: (item: MenuItem) => void;\n}\n\nexport const ControlButton = ({\n  label,\n  disabled,\n  onClick,\n  icon,\n  className,\n  menuItems,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n  onMenuItemClick,\n}: ButtonProps) => {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  let classes = styles.button;\n  if (className) {\n    classes += ` ${className}`;\n  }\n\n  const handleMenuClick = (item: MenuItem) => {\n    setMenuVisible(false);\n    if (onMenuItemClick) {\n      onMenuItemClick(item);\n    }\n  };\n\n  let menuTrigger: ReactElement | undefined;\n  let menu: ReactElement = <div />;\n  if (menuItems && menuItems.length > 0) {\n    classes += ` ${styles.hasDropdown}`;\n    menuTrigger = (\n      <button\n        disabled={disabled}\n        className={`${styles.button} ${popoverTriggerBtnClassName}  ${styles.dropdown}`}\n        onClick={() => setMenuVisible(!menuVisible)}\n      >\n        <div className={`${styles.separator} ${popoverTriggerBtnSeparatorClassName}`} />\n        <FontAwesomeIcon height={32} icon={faChevronDown} />\n      </button>\n    );\n\n    menu = (\n      <div className={`${styles.popoverMenu} ${popoverContainerClassName}`}>\n        <ul className={styles.list}>\n          {menuItems?.map((item, i) => {\n            return (\n              <li key={i} onClick={() => handleMenuClick(item)}>\n                {item.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  const mainContent = (\n    <button\n      disabled={disabled}\n      className={classes}\n      onClick={() => {\n        setMenuVisible(false);\n        if (onClick) onClick();\n      }}\n    >\n      {icon && <FontAwesomeIcon className={styles.icon} height={32} icon={icon} />}\n      {label}\n    </button>\n  );\n\n  if (!menuTrigger) {\n    return mainContent;\n  }\n\n  return (\n    <Popover isOpen={menuVisible} positions={['top']} content={menu}>\n      <div className={styles.buttonWrapper}>\n        {mainContent}\n        {menuTrigger}\n      </div>\n    </Popover>\n  );\n};\n","import { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface AudioSelectButtonProps {\n  isMuted: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  isButtonDisabled?: boolean;\n  muteText?: string;\n  unmuteText?: string;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const AudioSelectButton = ({\n  isMuted,\n  onClick,\n  onSourceSelected,\n  isButtonDisabled,\n  muteText = 'Mute',\n  unmuteText = 'Unmute',\n  className,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: AudioSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listAudioDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('audioinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listAudioDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listAudioDevices);\n\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listAudioDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isMuted ? unmuteText : muteText}\n      icon={isMuted ? faMicrophoneSlash : faMicrophone}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faVideo, faVideoSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface VideoSelectButtonProps {\n  isEnabled: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  disableText?: string;\n  enableText?: string;\n  className?: string;\n  isButtonDisabled?: boolean;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const VideoSelectButton = ({\n  isEnabled,\n  onClick,\n  onSourceSelected,\n  disableText = 'Disable Video',\n  enableText = 'Enable Video',\n  className,\n  isButtonDisabled,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: VideoSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listVideoDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('videoinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listVideoDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listVideoDevices);\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listVideoDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isEnabled ? disableText : enableText}\n      icon={isEnabled ? faVideo : faVideoSlash}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faDesktop, faStop } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { ReactElement } from 'react';\nimport { useParticipant } from '@livekit/react-core';\nimport { AudioSelectButton } from './AudioSelectButton';\nimport { ControlButton } from './ControlButton';\nimport styles from './styles.module.css';\nimport { VideoSelectButton } from './VideoSelectButton';\n\nexport interface ControlsProps {\n  room: Room;\n  enableScreenShare?: boolean;\n  enableAudio?: boolean;\n  enableVideo?: boolean;\n  onLeave?: (room: Room) => void;\n}\n\nexport const ControlsView = ({\n  room,\n  enableScreenShare,\n  enableAudio,\n  enableVideo,\n  onLeave,\n}: ControlsProps) => {\n  const { cameraPublication: camPub, microphonePublication: micPub } = useParticipant(\n    room.localParticipant,\n  );\n\n  if (enableScreenShare === undefined) {\n    enableScreenShare = true;\n  }\n  if (enableVideo === undefined) {\n    enableVideo = true;\n  }\n  if (enableAudio === undefined) {\n    enableAudio = true;\n  }\n\n  const [audioButtonDisabled, setAudioButtonDisabled] = React.useState(false);\n  let muteButton: ReactElement | undefined;\n  if (enableAudio) {\n    const enabled = !(micPub?.isMuted ?? true);\n    muteButton = (\n      <AudioSelectButton\n        isMuted={!enabled}\n        isButtonDisabled={audioButtonDisabled}\n        onClick={async () => {\n          setAudioButtonDisabled(true);\n          room.localParticipant\n            .setMicrophoneEnabled(!enabled)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setAudioButtonDisabled(true);\n          room\n            .switchActiveDevice('audioinput', device.deviceId)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [videoButtonDisabled, setVideoButtonDisabled] = React.useState(false);\n\n  let videoButton: ReactElement | undefined;\n  if (enableVideo) {\n    const enabled = !(camPub?.isMuted ?? true);\n    videoButton = (\n      <VideoSelectButton\n        isEnabled={enabled}\n        isButtonDisabled={videoButtonDisabled}\n        onClick={() => {\n          setVideoButtonDisabled(true);\n          room.localParticipant\n            .setCameraEnabled(!enabled)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setVideoButtonDisabled(true);\n          room\n            .switchActiveDevice('videoinput', device.deviceId)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [screenButtonDisabled, setScreenButtonDisabled] = React.useState(false);\n  let screenButton: ReactElement | undefined;\n  if (enableScreenShare) {\n    const enabled = room.localParticipant.isScreenShareEnabled;\n    screenButton = (\n      <ControlButton\n        label={enabled ? 'Stop sharing' : 'Share screen'}\n        icon={enabled ? faStop : faDesktop}\n        disabled={screenButtonDisabled}\n        onClick={() => {\n          setScreenButtonDisabled(true);\n          room.localParticipant\n            .setScreenShareEnabled(!enabled)\n            .finally(() => setScreenButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.controlsWrapper}>\n      {muteButton}\n      {videoButton}\n      {screenButton}\n      {onLeave && (\n        <ControlButton\n          label=\"End\"\n          className={styles.dangerButton}\n          onClick={() => {\n            room.disconnect();\n            onLeave(room);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface DisplayOptions {\n  stageLayout?: string;\n  /** display debugging stats */\n  showStats?: boolean;\n}\n\nexport const DisplayContext = React.createContext<DisplayOptions>({\n  stageLayout: 'grid',\n  showStats: false,\n});\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Property } from 'csstype';\nimport { ConnectionQuality, LocalTrack, Participant, RemoteTrack } from 'livekit-client';\nimport { useParticipant, VideoRenderer } from '@livekit/react-core';\n\nimport { AspectRatio } from 'react-aspect-ratio';\nimport { ReactComponent as connectionQuality1 } from '../../static/connection-quality-1.svg';\nimport { ReactComponent as connectionQuality2 } from '../../static/connection-quality-2.svg';\nimport { ReactComponent as connectionQuality3 } from '../../static/connection-quality-3.svg';\nimport { DisplayContext } from './DisplayContext';\nimport styles from './styles.module.css';\n\nexport interface ParticipantProps {\n  participant: Participant;\n  displayName?: string;\n  // width in CSS\n  width?: Property.Width;\n  // height in CSS\n  height?: Property.Height;\n  className?: string;\n  // aspect ratio width, if set, maintains aspect ratio\n  aspectWidth?: number;\n  // aspect ratio height\n  aspectHeight?: number;\n  // determine whether to contain or cover video.\n  // cover mode is used when layout orientation matches video orientation\n  orientation?: 'landscape' | 'portrait';\n  // true if overlay with participant info should be shown\n  showOverlay?: boolean;\n  // true if connection quality should be shown\n  showConnectionQuality?: boolean;\n  // additional classname when participant is currently speaking\n  speakerClassName?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onClick?: () => void;\n}\n\nexport const ParticipantView = ({\n  participant,\n  width,\n  height,\n  className,\n  speakerClassName,\n  aspectWidth,\n  aspectHeight,\n  orientation,\n  displayName,\n  showOverlay,\n  showConnectionQuality,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}: ParticipantProps) => {\n  const { cameraPublication, isLocal, connectionQuality, isSpeaking } = useParticipant(participant);\n  const [videoSize, setVideoSize] = useState<string>();\n  const [currentBitrate, setCurrentBitrate] = useState<number>();\n  const context = useContext(DisplayContext);\n\n  const handleResize = useCallback((width: number, height: number) => {\n    setVideoSize(`${width}x${height}`);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let total = 0;\n      participant.tracks.forEach((pub) => {\n        if (pub.track instanceof LocalTrack || pub.track instanceof RemoteTrack) {\n          total += pub.track.currentBitrate;\n        }\n      });\n      setCurrentBitrate(total);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const containerStyles: CSSProperties = {\n    width: width,\n    height: height,\n  };\n\n  // when aspect matches, cover instead\n  let objectFit: Property.ObjectFit = 'contain';\n  let videoOrientation: 'landscape' | 'portrait' | undefined;\n  if (!orientation && aspectWidth && aspectHeight) {\n    orientation = aspectWidth > aspectHeight ? 'landscape' : 'portrait';\n  }\n  if (cameraPublication?.dimensions) {\n    videoOrientation =\n      cameraPublication.dimensions.width > cameraPublication.dimensions.height\n        ? 'landscape'\n        : 'portrait';\n  }\n\n  if (videoOrientation === orientation) {\n    objectFit = 'cover';\n  }\n\n  if (!displayName) {\n    displayName = participant.name || participant.identity;\n    if (isLocal) {\n      displayName += ' (You)';\n    }\n  }\n\n  let mainElement: ReactElement;\n  if (cameraPublication?.isSubscribed && cameraPublication?.track && !cameraPublication?.isMuted) {\n    mainElement = (\n      <VideoRenderer\n        track={cameraPublication.track}\n        isLocal={isLocal}\n        objectFit={objectFit}\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.video}\n        onSizeChanged={handleResize}\n      />\n    );\n  } else {\n    mainElement = <div className={styles.placeholder} />;\n  }\n\n  const classes = [styles.participant];\n  if (className) {\n    classes.push(className);\n  }\n  if (isSpeaking) {\n    classes.push(speakerClassName ?? styles.speaker);\n  }\n  const isAudioMuted = !participant.isMicrophoneEnabled;\n\n  // gather stats\n  let statsContent: ReactElement | undefined;\n  if (context.showStats) {\n    statsContent = (\n      <div className={styles.stats}>\n        <span>{videoSize}</span>\n        {currentBitrate !== undefined && currentBitrate > 0 && (\n          <span>&nbsp;{Math.round(currentBitrate / 1024)} kbps</span>\n        )}\n      </div>\n    );\n  }\n\n  let ConnectionQualityIndicator: typeof connectionQuality1 | undefined;\n  if (showConnectionQuality) {\n    switch (connectionQuality) {\n      case ConnectionQuality.Excellent:\n        ConnectionQualityIndicator = connectionQuality3;\n        break;\n      case ConnectionQuality.Good:\n        ConnectionQualityIndicator = connectionQuality2;\n        break;\n      case ConnectionQuality.Poor:\n        ConnectionQualityIndicator = connectionQuality1;\n        break;\n    }\n  }\n\n  return (\n    <div\n      className={classes.join(' ')}\n      style={containerStyles}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n    >\n      {aspectWidth && aspectHeight && (\n        <AspectRatio ratio={aspectWidth / aspectHeight}>{mainElement}</AspectRatio>\n      )}\n      {(!aspectWidth || !aspectHeight) && mainElement}\n\n      {(showOverlay || context.showStats) && (\n        <div className={styles.participantBar}>\n          <div className={styles.name}>{displayName}</div>\n          <div className={styles.center}>{statsContent}</div>\n          <div>{ConnectionQualityIndicator && <ConnectionQualityIndicator />}</div>\n          <div>\n            <FontAwesomeIcon\n              icon={isAudioMuted ? faMicrophoneSlash : faMicrophone}\n              height={24}\n              className={isAudioMuted ? styles.iconRed : styles.iconNormal}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Property } from 'csstype';\nimport { Track } from 'livekit-client';\nimport { VideoRenderer } from '@livekit/react-core';\n\nimport React from 'react';\nimport styles from './styles.module.css';\n\ninterface ScreenShareProps {\n  track: Track;\n  width?: Property.Width;\n  height?: Property.Height;\n}\n\nexport const ScreenShareView = ({ track, width, height }: ScreenShareProps) => {\n  return (\n    <div className={styles.screenShare}>\n      <VideoRenderer\n        track={track}\n        isLocal={false}\n        width={width}\n        height={height}\n        className={styles.video}\n      />\n    </div>\n  );\n};\n","import { Participant } from 'livekit-client';\nimport React, { useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { StageProps } from '../StageProps';\nimport styles from './styles.module.css';\n\nexport const GridStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [visibleParticipants, setVisibleParticipants] = useState<Participant[]>([]);\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [gridClass, setGridClass] = React.useState(styles.grid1x1);\n\n  // compute visible participants and sort.\n  useEffect(() => {\n    // determine grid size\n    let numVisible = 1;\n    if (participants.length === 1) {\n      setGridClass(styles.grid1x1);\n    } else if (participants.length === 2) {\n      setGridClass(styles.grid2x1);\n      numVisible = 2;\n    } else if (participants.length <= 4) {\n      setGridClass(styles.grid2x2);\n      numVisible = Math.min(participants.length, 4);\n    } else if (participants.length <= 9) {\n      setGridClass(styles.grid3x3);\n      numVisible = Math.min(participants.length, 9);\n    } else if (participants.length <= 16) {\n      setGridClass(styles.grid4x4);\n      numVisible = Math.min(participants.length, 16);\n    } else {\n      setGridClass(styles.grid5x5);\n      numVisible = Math.min(participants.length, 25);\n    }\n\n    // remove any participants that are no longer connected\n    const newParticipants: Participant[] = [];\n    visibleParticipants.forEach((p) => {\n      if (room?.participants.has(p.sid) || room?.localParticipant.sid === p.sid) {\n        newParticipants.push(p);\n      }\n    });\n\n    // ensure active speakers are all visible\n    room?.activeSpeakers?.forEach((speaker) => {\n      if (\n        newParticipants.includes(speaker) ||\n        (speaker !== room?.localParticipant && !room?.participants.has(speaker.sid))\n      ) {\n        return;\n      }\n      // find a non-active speaker and switch\n      const idx = newParticipants.findIndex((p) => !p.isSpeaking);\n      if (idx >= 0) {\n        newParticipants[idx] = speaker;\n      } else {\n        newParticipants.push(speaker);\n      }\n    });\n\n    // add other non speakers\n    for (const p of participants) {\n      if (newParticipants.length >= numVisible) {\n        break;\n      }\n      if (newParticipants.includes(p) || p.isSpeaking) {\n        continue;\n      }\n      newParticipants.push(p);\n    }\n\n    if (newParticipants.length > numVisible) {\n      newParticipants.splice(numVisible, newParticipants.length - numVisible);\n    }\n    setVisibleParticipants(newParticipants);\n  }, [participants]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (participants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={`${styles.gridStage} ${gridClass}`}>\n        {visibleParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              orientation=\"landscape\"\n              width=\"100%\"\n              height=\"100%\"\n              showOverlay={showOverlay}\n              showConnectionQuality\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { LocalParticipant, Participant } from 'livekit-client';\n\n/**\n * Default sort for participants, it'll order participants by:\n * 1. dominant speaker (speaker with the loudest audio level)\n * 2. local participant\n * 3. other speakers that are recently active\n * 4. participants with video on\n * 5. by joinedAt\n */\nexport function defaultSortParticipants(participants: Participant[]): Participant[] {\n  const sortedParticipants = [...participants];\n  sortedParticipants.sort((a, b) => {\n    // loudest speaker first\n    if (a.isSpeaking && b.isSpeaking) {\n      return b.audioLevel - a.audioLevel;\n    }\n\n    // speaker goes first\n    if (a.isSpeaking !== b.isSpeaking) {\n      if (a.isSpeaking) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // last active speaker first\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      const aLast = a.lastSpokeAt?.getTime() ?? 0;\n      const bLast = b.lastSpokeAt?.getTime() ?? 0;\n      return bLast - aLast;\n    }\n\n    // video on\n    const aVideo = a.videoTracks.size > 0;\n    const bVideo = b.videoTracks.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // joinedAt\n    return (a.joinedAt?.getTime() ?? 0) - (b.joinedAt?.getTime() ?? 0);\n  });\n  const localParticipant = sortedParticipants.find((p) => p instanceof LocalParticipant);\n  if (localParticipant) {\n    const localIdx = sortedParticipants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      sortedParticipants.splice(localIdx, 1);\n      if (sortedParticipants.length > 0) {\n        sortedParticipants.splice(1, 0, localParticipant);\n      } else {\n        sortedParticipants.push(localParticipant);\n      }\n    }\n  }\n  return sortedParticipants;\n}\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const SpeakerStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else {\n    [participantInFocus, ...otherParticipants] = sortedParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"landscape\"\n        showOverlay={showOverlay}\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>\n        <div className={styles.stageCenter}>{mainView}</div>\n        <div className={styles.sidebar}>\n          {otherParticipants.map((participant) => {\n            return (\n              <ParticipantRenderer\n                key={participant.identity}\n                participant={participant}\n                width=\"100%\"\n                aspectWidth={16}\n                aspectHeight={9}\n                showOverlay={showOverlay}\n                onMouseEnter={() => setShowOverlay(true)}\n                onMouseLeave={() => setShowOverlay(false)}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const MobileStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else if (otherParticipants.length === 0) {\n    mainView = <div>no one is in the room</div>;\n  } else {\n    [participantInFocus, ...otherParticipants] = otherParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        showOverlay={showOverlay}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"portrait\"\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>{mainView}</div>\n      <div className={styles.participantsArea}>\n        {otherParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              className={styles.participant}\n              aspectWidth={4}\n              aspectHeight={3}\n              showOverlay={showOverlay}\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} enableScreenShare={false} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Track, VideoTrack } from 'livekit-client';\nimport { AudioRenderer } from '@livekit/react-core';\nimport React, { ReactElement, useContext } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { GridStage } from './desktop/GridStage';\nimport { SpeakerStage } from './desktop/SpeakerStage';\nimport { DisplayContext } from './DisplayContext';\nimport { MobileStage } from './mobile/MobileStage';\nimport { StageProps } from './StageProps';\nimport styles from './styles.module.css';\n\nexport const StageView = (stageProps: StageProps) => {\n  const isMobile = useMediaQuery({ query: '(max-width: 800px)' });\n  const { room, participants } = stageProps.roomState;\n  const context = useContext(DisplayContext);\n\n  let mainElement: ReactElement;\n  if (isMobile) {\n    mainElement = <MobileStage {...stageProps} />;\n  } else {\n    // find first participant with screen shared\n    let screenTrack: VideoTrack | undefined;\n    participants.forEach((p) => {\n      if (screenTrack) {\n        return;\n      }\n      const track = p.getTrack(Track.Source.ScreenShare);\n      if (track?.isSubscribed && track.videoTrack) {\n        screenTrack = track.videoTrack;\n      }\n    });\n\n    if (context.stageLayout === 'grid' && screenTrack === undefined) {\n      mainElement = <GridStage {...stageProps} />;\n    } else {\n      mainElement = <SpeakerStage {...stageProps} />;\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      {mainElement}\n      {stageProps.roomState.audioTracks.map((track) => (\n        <AudioRenderer key={track.sid} track={track} isLocal={false} />\n      ))}\n\n      {room?.canPlaybackAudio === false && (\n        <div className={styles.overlay}>\n          <button\n            className={styles.unmuteButton}\n            onClick={() => {\n              room.startAudio();\n            }}\n          >\n            <FontAwesomeIcon className={styles.icon} size=\"1x\" icon={faVolumeMute} />\n            Click to Unmute\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Room, RoomOptions, RoomConnectOptions, ConnectionState } from 'livekit-client';\nimport React, { useEffect } from 'react';\nimport { ControlsProps } from './components/ControlsView';\nimport { ParticipantProps } from './components/ParticipantView';\nimport { StageProps } from './components/StageProps';\nimport { StageView } from './components/StageView';\nimport { useRoom } from '@livekit/react-core';\n\nexport interface RoomProps {\n  url: string;\n  token: string;\n  roomOptions?: RoomOptions;\n  connectOptions?: RoomConnectOptions;\n  // when first connected to room\n  onConnected?: (room: Room) => void;\n  // when user leaves the room\n  onLeave?: (room: Room) => void;\n  stageRenderer?: (props: StageProps) => React.ReactElement | null;\n  participantRenderer?: (props: ParticipantProps) => React.ReactElement | null;\n  controlRenderer?: (props: ControlsProps) => React.ReactElement | null;\n}\n\nexport const LiveKitRoom = ({\n  url,\n  token,\n  roomOptions,\n  connectOptions,\n  stageRenderer,\n  participantRenderer,\n  controlRenderer,\n  onConnected,\n  onLeave,\n}: RoomProps) => {\n  const roomState = useRoom(roomOptions);\n\n  useEffect(() => {\n    roomState.connect(url, token, connectOptions).then((room) => {\n      if (!room) {\n        return;\n      }\n      if (onConnected && room.state === ConnectionState.Connected) {\n        onConnected(room);\n      }\n    });\n  }, []);\n\n  const selectedStageRenderer = stageRenderer ?? StageView;\n\n  return selectedStageRenderer({\n    roomState,\n    participantRenderer,\n    controlRenderer,\n    onLeave,\n  });\n};\n"],"names":["ControlButton","label","disabled","onClick","icon","className","menuItems","popoverContainerClassName","popoverTriggerBtnClassName","popoverTriggerBtnSeparatorClassName","onMenuItemClick","useState","menuVisible","setMenuVisible","classes","styles","button","handleMenuClick","item","menuTrigger","menu","React","length","hasDropdown","dropdown","separator","FontAwesomeIcon","height","faChevronDown","popoverMenu","list","map","i","key","mainContent","Popover","isOpen","positions","content","buttonWrapper","AudioSelectButton","isMuted","onSourceSelected","isButtonDisabled","muteText","unmuteText","sources","setSources","setMenuItems","listAudioDevices","useCallback","Room","getLocalDevices","devices","useEffect","navigator","mediaDevices","addEventListener","removeEventListener","handleMenuItem","device","find","d","faMicrophoneSlash","faMicrophone","VideoSelectButton","isEnabled","disableText","enableText","listVideoDevices","faVideo","faVideoSlash","ControlsView","room","enableScreenShare","enableAudio","enableVideo","onLeave","useParticipant","localParticipant","camPub","cameraPublication","micPub","microphonePublication","undefined","audioButtonDisabled","setAudioButtonDisabled","muteButton","enabled","setMicrophoneEnabled","switchActiveDevice","deviceId","videoButtonDisabled","setVideoButtonDisabled","videoButton","setCameraEnabled","screenButtonDisabled","setScreenButtonDisabled","screenButton","isScreenShareEnabled","faStop","faDesktop","setScreenShareEnabled","controlsWrapper","dangerButton","disconnect","DisplayContext","createContext","stageLayout","showStats","ParticipantView","participant","width","speakerClassName","aspectWidth","aspectHeight","orientation","displayName","showOverlay","showConnectionQuality","onMouseEnter","onMouseLeave","isLocal","connectionQuality","isSpeaking","videoSize","setVideoSize","currentBitrate","setCurrentBitrate","context","useContext","handleResize","interval","setInterval","total","tracks","forEach","pub","track","LocalTrack","RemoteTrack","clearInterval","containerStyles","objectFit","videoOrientation","dimensions","name","identity","mainElement","isSubscribed","VideoRenderer","video","onSizeChanged","placeholder","push","speaker","isAudioMuted","isMicrophoneEnabled","statsContent","stats","Math","round","ConnectionQualityIndicator","ConnectionQuality","Excellent","connectionQuality3","Good","connectionQuality2","Poor","connectionQuality1","join","style","AspectRatio","ratio","participantBar","center","iconRed","iconNormal","ScreenShareView","screenShare","GridStage","roomState","participantRenderer","controlRenderer","isConnecting","error","participants","visibleParticipants","setVisibleParticipants","setShowOverlay","grid1x1","gridClass","setGridClass","numVisible","grid2x1","grid2x2","min","grid3x3","grid4x4","grid5x5","newParticipants","p","has","sid","activeSpeakers","includes","idx","findIndex","splice","message","ParticipantRenderer","ControlRenderer","container","gridStage","controlsArea","defaultSortParticipants","sortedParticipants","sort","a","b","audioLevel","lastSpokeAt","aLast","getTime","bLast","aVideo","videoTracks","size","bVideo","joinedAt","LocalParticipant","localIdx","indexOf","SpeakerStage","sortParticipants","sortFn","setSortedParticipants","screenTrack","getTrack","Track","Source","ScreenShare","videoTrack","otherParticipants","participantInFocus","mainView","stage","stageCenter","sidebar","MobileStage","participantsArea","StageView","stageProps","isMobile","useMediaQuery","query","audioTracks","AudioRenderer","canPlaybackAudio","overlay","unmuteButton","startAudio","faVolumeMute","LiveKitRoom","url","token","roomOptions","connectOptions","stageRenderer","onConnected","useRoom","connect","then","state","ConnectionState","Connected","selectedStageRenderer"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.modern.js","sources":["../src/components/ControlButton.tsx","../src/components/AudioSelectButton.tsx","../src/components/VideoSelectButton.tsx","../src/components/ControlsView.tsx","../src/components/DisplayContext.tsx","../src/components/ParticipantView.tsx","../src/components/ScreenShareView.tsx","../src/components/desktop/GridStage.tsx","../src/components/StageUtils.ts","../src/components/desktop/SpeakerStage.tsx","../src/components/mobile/MobileStage.tsx","../src/components/StageView.tsx","../src/LiveKitRoom.tsx"],"sourcesContent":["import { faChevronDown, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { ReactElement, useState } from 'react';\nimport { Popover } from 'react-tiny-popover';\nimport styles from './styles.module.css';\n\nexport interface MenuItem {\n  label: string;\n}\ninterface ButtonProps {\n  label: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  icon?: IconDefinition;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n  menuItems?: MenuItem[];\n  onMenuItemClick?: (item: MenuItem) => void;\n}\n\nexport const ControlButton = ({\n  label,\n  disabled,\n  onClick,\n  icon,\n  className,\n  menuItems,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n  onMenuItemClick,\n}: ButtonProps) => {\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  let classes = styles.button;\n  if (className) {\n    classes += ` ${className}`;\n  }\n\n  const handleMenuClick = (item: MenuItem) => {\n    setMenuVisible(false);\n    if (onMenuItemClick) {\n      onMenuItemClick(item);\n    }\n  };\n\n  let menuTrigger: ReactElement | undefined;\n  let menu: ReactElement = <div />;\n  if (menuItems && menuItems.length > 0) {\n    classes += ` ${styles.hasDropdown}`;\n    menuTrigger = (\n      <button\n        disabled={disabled}\n        className={`${styles.button} ${popoverTriggerBtnClassName}  ${styles.dropdown}`}\n        onClick={() => setMenuVisible(!menuVisible)}\n      >\n        <div className={`${styles.separator} ${popoverTriggerBtnSeparatorClassName}`} />\n        <FontAwesomeIcon height={32} icon={faChevronDown} />\n      </button>\n    );\n\n    menu = (\n      <div className={`${styles.popoverMenu} ${popoverContainerClassName}`}>\n        <ul className={styles.list}>\n          {menuItems?.map((item, i) => {\n            return (\n              <li key={i} onClick={() => handleMenuClick(item)}>\n                {item.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  const mainContent = (\n    <button\n      disabled={disabled}\n      className={classes}\n      onClick={() => {\n        setMenuVisible(false);\n        if (onClick) onClick();\n      }}\n    >\n      {icon && <FontAwesomeIcon className={styles.icon} height={32} icon={icon} />}\n      {label}\n    </button>\n  );\n\n  if (!menuTrigger) {\n    return mainContent;\n  }\n\n  return (\n    <Popover isOpen={menuVisible} positions={['top']} content={menu}>\n      <div className={styles.buttonWrapper}>\n        {mainContent}\n        {menuTrigger}\n      </div>\n    </Popover>\n  );\n};\n","import { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface AudioSelectButtonProps {\n  isMuted: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  isButtonDisabled?: boolean;\n  muteText?: string;\n  unmuteText?: string;\n  className?: string;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const AudioSelectButton = ({\n  isMuted,\n  onClick,\n  onSourceSelected,\n  isButtonDisabled,\n  muteText = 'Mute?',\n  unmuteText = 'Unmute!',\n  className,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: AudioSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listAudioDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('audioinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listAudioDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listAudioDevices);\n\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listAudioDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isMuted ? unmuteText : muteText}\n      icon={isMuted ? faMicrophoneSlash : faMicrophone}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faVideo, faVideoSlash } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ControlButton, MenuItem } from './ControlButton';\n\nexport interface VideoSelectButtonProps {\n  isEnabled: boolean;\n  onClick?: () => void;\n  onSourceSelected?: (device: MediaDeviceInfo) => void;\n  disableText?: string;\n  enableText?: string;\n  className?: string;\n  isButtonDisabled?: boolean;\n  popoverContainerClassName?: string;\n  popoverTriggerBtnClassName?: string;\n  popoverTriggerBtnSeparatorClassName?: string;\n}\n\nexport const VideoSelectButton = ({\n  isEnabled,\n  onClick,\n  onSourceSelected,\n  disableText = 'Disable Video',\n  enableText = 'Enable Video',\n  className,\n  isButtonDisabled,\n  popoverContainerClassName,\n  popoverTriggerBtnClassName,\n  popoverTriggerBtnSeparatorClassName,\n}: VideoSelectButtonProps) => {\n  const [sources, setSources] = useState<MediaDeviceInfo[]>([]);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n\n  const listVideoDevices = useCallback(async () => {\n    const devices = await Room.getLocalDevices('videoinput');\n    setSources(devices);\n    setMenuItems(\n      devices.map((item) => {\n        return { label: item.label };\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    listVideoDevices();\n    navigator.mediaDevices.addEventListener('devicechange', listVideoDevices);\n    return () => {\n      navigator.mediaDevices.removeEventListener('devicechange', listVideoDevices);\n    };\n  }, []);\n\n  const handleMenuItem = (item: MenuItem) => {\n    const device = sources.find((d) => d.label === item.label);\n    if (device && onSourceSelected) {\n      onSourceSelected(device);\n    }\n  };\n\n  return (\n    <ControlButton\n      label={isEnabled ? disableText : enableText}\n      icon={isEnabled ? faVideo : faVideoSlash}\n      disabled={isButtonDisabled}\n      onClick={onClick}\n      menuItems={menuItems}\n      onMenuItemClick={handleMenuItem}\n      className={className}\n      popoverContainerClassName={popoverContainerClassName}\n      popoverTriggerBtnClassName={popoverTriggerBtnClassName}\n      popoverTriggerBtnSeparatorClassName={popoverTriggerBtnSeparatorClassName}\n    />\n  );\n};\n","import { faDesktop, faStop } from '@fortawesome/free-solid-svg-icons';\nimport { Room } from 'livekit-client';\nimport React, { ReactElement } from 'react';\nimport { useParticipant } from '@livekit/react-core';\nimport { AudioSelectButton } from './AudioSelectButton';\nimport { ControlButton } from './ControlButton';\nimport styles from './styles.module.css';\nimport { VideoSelectButton } from './VideoSelectButton';\n\nexport interface ControlsProps {\n  room: Room;\n  enableScreenShare?: boolean;\n  enableAudio?: boolean;\n  enableVideo?: boolean;\n  onLeave?: (room: Room) => void;\n}\n\nexport const ControlsView = ({\n  room,\n  enableScreenShare,\n  enableAudio,\n  enableVideo,\n  onLeave,\n}: ControlsProps) => {\n  const { cameraPublication: camPub, microphonePublication: micPub } = useParticipant(\n    room.localParticipant,\n  );\n\n  if (enableScreenShare === undefined) {\n    enableScreenShare = true;\n  }\n  if (enableVideo === undefined) {\n    enableVideo = true;\n  }\n  if (enableAudio === undefined) {\n    enableAudio = true;\n  }\n\n  const [audioButtonDisabled, setAudioButtonDisabled] = React.useState(false);\n  let muteButton: ReactElement | undefined;\n  if (enableAudio) {\n    const enabled = !(micPub?.isMuted ?? true);\n    muteButton = (\n      <AudioSelectButton\n        isMuted={!enabled}\n        isButtonDisabled={audioButtonDisabled}\n        onClick={async () => {\n          setAudioButtonDisabled(true);\n          room.localParticipant\n            .setMicrophoneEnabled(!enabled)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setAudioButtonDisabled(true);\n          room\n            .switchActiveDevice('audioinput', device.deviceId)\n            .finally(() => setAudioButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [videoButtonDisabled, setVideoButtonDisabled] = React.useState(false);\n\n  let videoButton: ReactElement | undefined;\n  if (enableVideo) {\n    const enabled = !(camPub?.isMuted ?? true);\n    videoButton = (\n      <VideoSelectButton\n        isEnabled={enabled}\n        isButtonDisabled={videoButtonDisabled}\n        onClick={() => {\n          setVideoButtonDisabled(true);\n          room.localParticipant\n            .setCameraEnabled(!enabled)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n        onSourceSelected={(device) => {\n          setVideoButtonDisabled(true);\n          room\n            .switchActiveDevice('videoinput', device.deviceId)\n            .finally(() => setVideoButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  const [screenButtonDisabled, setScreenButtonDisabled] = React.useState(false);\n  let screenButton: ReactElement | undefined;\n  if (enableScreenShare) {\n    const enabled = room.localParticipant.isScreenShareEnabled;\n    screenButton = (\n      <ControlButton\n        label={enabled ? 'Stop sharing' : 'Share screen'}\n        icon={enabled ? faStop : faDesktop}\n        disabled={screenButtonDisabled}\n        onClick={() => {\n          setScreenButtonDisabled(true);\n          room.localParticipant\n            .setScreenShareEnabled(!enabled)\n            .finally(() => setScreenButtonDisabled(false));\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.controlsWrapper}>\n      {muteButton}\n      {videoButton}\n      {screenButton}\n      {onLeave && (\n        <ControlButton\n          label=\"End\"\n          className={styles.dangerButton}\n          onClick={() => {\n            room.disconnect();\n            onLeave(room);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface DisplayOptions {\n  stageLayout?: string;\n  /** display debugging stats */\n  showStats?: boolean;\n}\n\nexport const DisplayContext = React.createContext<DisplayOptions>({\n  stageLayout: 'grid',\n  showStats: false,\n});\n","import React, {\n  CSSProperties,\n  ReactElement,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Property } from 'csstype';\nimport { ConnectionQuality, LocalTrack, Participant, RemoteTrack } from 'livekit-client';\nimport { useParticipant, VideoRenderer } from '@livekit/react-core';\n\nimport { AspectRatio } from 'react-aspect-ratio';\nimport { ReactComponent as connectionQuality1 } from '../../static/connection-quality-1.svg';\nimport { ReactComponent as connectionQuality2 } from '../../static/connection-quality-2.svg';\nimport { ReactComponent as connectionQuality3 } from '../../static/connection-quality-3.svg';\nimport { DisplayContext } from './DisplayContext';\nimport styles from './styles.module.css';\n\nexport interface ParticipantProps {\n  participant: Participant;\n  displayName?: string;\n  // width in CSS\n  width?: Property.Width;\n  // height in CSS\n  height?: Property.Height;\n  className?: string;\n  // aspect ratio width, if set, maintains aspect ratio\n  aspectWidth?: number;\n  // aspect ratio height\n  aspectHeight?: number;\n  // determine whether to contain or cover video.\n  // cover mode is used when layout orientation matches video orientation\n  orientation?: 'landscape' | 'portrait';\n  // true if overlay with participant info should be shown\n  showOverlay?: boolean;\n  // true if connection quality should be shown\n  showConnectionQuality?: boolean;\n  // additional classname when participant is currently speaking\n  speakerClassName?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onClick?: () => void;\n}\n\nexport const ParticipantView = ({\n  participant,\n  width,\n  height,\n  className,\n  speakerClassName,\n  aspectWidth,\n  aspectHeight,\n  orientation,\n  displayName,\n  showOverlay,\n  showConnectionQuality,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}: ParticipantProps) => {\n  const { cameraPublication, isLocal, connectionQuality, isSpeaking } = useParticipant(participant);\n  const [videoSize, setVideoSize] = useState<string>();\n  const [currentBitrate, setCurrentBitrate] = useState<number>();\n  const context = useContext(DisplayContext);\n\n  const handleResize = useCallback((width: number, height: number) => {\n    setVideoSize(`${width}x${height}`);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let total = 0;\n      participant.tracks.forEach((pub) => {\n        if (pub.track instanceof LocalTrack || pub.track instanceof RemoteTrack) {\n          total += pub.track.currentBitrate;\n        }\n      });\n      setCurrentBitrate(total);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const containerStyles: CSSProperties = {\n    width: width,\n    height: height,\n  };\n\n  // when aspect matches, cover instead\n  let objectFit: Property.ObjectFit = 'contain';\n  let videoOrientation: 'landscape' | 'portrait' | undefined;\n  if (!orientation && aspectWidth && aspectHeight) {\n    orientation = aspectWidth > aspectHeight ? 'landscape' : 'portrait';\n  }\n  if (cameraPublication?.dimensions) {\n    videoOrientation =\n      cameraPublication.dimensions.width > cameraPublication.dimensions.height\n        ? 'landscape'\n        : 'portrait';\n  }\n\n  if (videoOrientation === orientation) {\n    objectFit = 'cover';\n  }\n\n  if (!displayName) {\n    displayName = participant.name || participant.identity;\n    if (isLocal) {\n      displayName += ' (You)';\n    }\n  }\n\n  let mainElement: ReactElement;\n  if (cameraPublication?.isSubscribed && cameraPublication?.track && !cameraPublication?.isMuted) {\n    mainElement = (\n      <VideoRenderer\n        track={cameraPublication.track}\n        isLocal={isLocal}\n        objectFit={objectFit}\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.video}\n        onSizeChanged={handleResize}\n      />\n    );\n  } else {\n    mainElement = <div className={styles.placeholder} />;\n  }\n\n  const classes = [styles.participant];\n  if (className) {\n    classes.push(className);\n  }\n  if (isSpeaking) {\n    classes.push(speakerClassName ?? styles.speaker);\n  }\n  const isAudioMuted = !participant.isMicrophoneEnabled;\n\n  // gather stats\n  let statsContent: ReactElement | undefined;\n  if (context.showStats) {\n    statsContent = (\n      <div className={styles.stats}>\n        <span>{videoSize}</span>\n        {currentBitrate !== undefined && currentBitrate > 0 && (\n          <span>&nbsp;{Math.round(currentBitrate / 1024)} kbps</span>\n        )}\n      </div>\n    );\n  }\n\n  let ConnectionQualityIndicator: typeof connectionQuality1 | undefined;\n  if (showConnectionQuality) {\n    switch (connectionQuality) {\n      case ConnectionQuality.Excellent:\n        ConnectionQualityIndicator = connectionQuality3;\n        break;\n      case ConnectionQuality.Good:\n        ConnectionQualityIndicator = connectionQuality2;\n        break;\n      case ConnectionQuality.Poor:\n        ConnectionQualityIndicator = connectionQuality1;\n        break;\n    }\n  }\n\n  return (\n    <div\n      className={classes.join(' ')}\n      style={containerStyles}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n    >\n      {aspectWidth && aspectHeight && (\n        <AspectRatio ratio={aspectWidth / aspectHeight}>{mainElement}</AspectRatio>\n      )}\n      {(!aspectWidth || !aspectHeight) && mainElement}\n\n      {(showOverlay || context.showStats) && (\n        <div className={styles.participantBar}>\n          <div className={styles.name}>{displayName}</div>\n          <div className={styles.center}>{statsContent}</div>\n          <div>{ConnectionQualityIndicator && <ConnectionQualityIndicator />}</div>\n          <div>\n            <FontAwesomeIcon\n              icon={isAudioMuted ? faMicrophoneSlash : faMicrophone}\n              height={24}\n              className={isAudioMuted ? styles.iconRed : styles.iconNormal}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Property } from 'csstype';\nimport { Track } from 'livekit-client';\nimport { VideoRenderer } from '@livekit/react-core';\n\nimport React from 'react';\nimport styles from './styles.module.css';\n\ninterface ScreenShareProps {\n  track: Track;\n  width?: Property.Width;\n  height?: Property.Height;\n}\n\nexport const ScreenShareView = ({ track, width, height }: ScreenShareProps) => {\n  return (\n    <div className={styles.screenShare}>\n      <VideoRenderer\n        track={track}\n        isLocal={false}\n        width={width}\n        height={height}\n        className={styles.video}\n      />\n    </div>\n  );\n};\n","import { Participant } from 'livekit-client';\nimport React, { useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { StageProps } from '../StageProps';\nimport styles from './styles.module.css';\n\nexport const GridStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [visibleParticipants, setVisibleParticipants] = useState<Participant[]>([]);\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [gridClass, setGridClass] = React.useState(styles.grid1x1);\n\n  // compute visible participants and sort.\n  useEffect(() => {\n    // determine grid size\n    let numVisible = 1;\n    if (participants.length === 1) {\n      setGridClass(styles.grid1x1);\n    } else if (participants.length === 2) {\n      setGridClass(styles.grid2x1);\n      numVisible = 2;\n    } else if (participants.length <= 4) {\n      setGridClass(styles.grid2x2);\n      numVisible = Math.min(participants.length, 4);\n    } else if (participants.length <= 9) {\n      setGridClass(styles.grid3x3);\n      numVisible = Math.min(participants.length, 9);\n    } else if (participants.length <= 16) {\n      setGridClass(styles.grid4x4);\n      numVisible = Math.min(participants.length, 16);\n    } else {\n      setGridClass(styles.grid5x5);\n      numVisible = Math.min(participants.length, 25);\n    }\n\n    // remove any participants that are no longer connected\n    const newParticipants: Participant[] = [];\n    visibleParticipants.forEach((p) => {\n      if (room?.participants.has(p.sid) || room?.localParticipant.sid === p.sid) {\n        newParticipants.push(p);\n      }\n    });\n\n    // ensure active speakers are all visible\n    room?.activeSpeakers?.forEach((speaker) => {\n      if (\n        newParticipants.includes(speaker) ||\n        (speaker !== room?.localParticipant && !room?.participants.has(speaker.sid))\n      ) {\n        return;\n      }\n      // find a non-active speaker and switch\n      const idx = newParticipants.findIndex((p) => !p.isSpeaking);\n      if (idx >= 0) {\n        newParticipants[idx] = speaker;\n      } else {\n        newParticipants.push(speaker);\n      }\n    });\n\n    // add other non speakers\n    for (const p of participants) {\n      if (newParticipants.length >= numVisible) {\n        break;\n      }\n      if (newParticipants.includes(p) || p.isSpeaking) {\n        continue;\n      }\n      newParticipants.push(p);\n    }\n\n    if (newParticipants.length > numVisible) {\n      newParticipants.splice(numVisible, newParticipants.length - numVisible);\n    }\n    setVisibleParticipants(newParticipants);\n  }, [participants]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (participants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={`${styles.gridStage} ${gridClass}`}>\n        {visibleParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              orientation=\"landscape\"\n              width=\"100%\"\n              height=\"100%\"\n              showOverlay={showOverlay}\n              showConnectionQuality\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { LocalParticipant, Participant } from 'livekit-client';\n\n/**\n * Default sort for participants, it'll order participants by:\n * 1. dominant speaker (speaker with the loudest audio level)\n * 2. local participant\n * 3. other speakers that are recently active\n * 4. participants with video on\n * 5. by joinedAt\n */\nexport function defaultSortParticipants(participants: Participant[]): Participant[] {\n  const sortedParticipants = [...participants];\n  sortedParticipants.sort((a, b) => {\n    // loudest speaker first\n    if (a.isSpeaking && b.isSpeaking) {\n      return b.audioLevel - a.audioLevel;\n    }\n\n    // speaker goes first\n    if (a.isSpeaking !== b.isSpeaking) {\n      if (a.isSpeaking) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // last active speaker first\n    if (a.lastSpokeAt !== b.lastSpokeAt) {\n      const aLast = a.lastSpokeAt?.getTime() ?? 0;\n      const bLast = b.lastSpokeAt?.getTime() ?? 0;\n      return bLast - aLast;\n    }\n\n    // video on\n    const aVideo = a.videoTracks.size > 0;\n    const bVideo = b.videoTracks.size > 0;\n    if (aVideo !== bVideo) {\n      if (aVideo) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n\n    // joinedAt\n    return (a.joinedAt?.getTime() ?? 0) - (b.joinedAt?.getTime() ?? 0);\n  });\n  const localParticipant = sortedParticipants.find((p) => p instanceof LocalParticipant);\n  if (localParticipant) {\n    const localIdx = sortedParticipants.indexOf(localParticipant);\n    if (localIdx >= 0) {\n      sortedParticipants.splice(localIdx, 1);\n      if (sortedParticipants.length > 0) {\n        sortedParticipants.splice(1, 0, localParticipant);\n      } else {\n        sortedParticipants.push(localParticipant);\n      }\n    }\n  }\n  return sortedParticipants;\n}\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const SpeakerStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else {\n    [participantInFocus, ...otherParticipants] = sortedParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"landscape\"\n        showOverlay={showOverlay}\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>\n        <div className={styles.stageCenter}>{mainView}</div>\n        <div className={styles.sidebar}>\n          {otherParticipants.map((participant) => {\n            return (\n              <ParticipantRenderer\n                key={participant.identity}\n                participant={participant}\n                width=\"100%\"\n                aspectWidth={16}\n                aspectHeight={9}\n                showOverlay={showOverlay}\n                onMouseEnter={() => setShowOverlay(true)}\n                onMouseLeave={() => setShowOverlay(false)}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { Participant, Track, VideoTrack } from 'livekit-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { ControlsView } from '../ControlsView';\nimport { ParticipantView } from '../ParticipantView';\nimport { ScreenShareView } from '../ScreenShareView';\nimport { StageProps } from '../StageProps';\nimport { defaultSortParticipants } from '../StageUtils';\nimport styles from './styles.module.css';\n\nexport const MobileStage = ({\n  roomState,\n  participantRenderer,\n  controlRenderer,\n  onLeave,\n  sortParticipants,\n}: StageProps) => {\n  const { isConnecting, error, participants, room } = roomState;\n  const [showOverlay, setShowOverlay] = useState(false);\n  const sortFn = sortParticipants ?? defaultSortParticipants;\n  const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\n\n  useEffect(() => {\n    setSortedParticipants(sortFn(participants));\n  }, [participants, sortFn]);\n\n  if (error) {\n    return <div>error {error.message}</div>;\n  }\n\n  if (isConnecting) {\n    return <div>connecting</div>;\n  }\n  if (!room) {\n    return <div>room closed</div>;\n  }\n\n  if (sortedParticipants.length === 0) {\n    return <div>no one is in the room</div>;\n  }\n\n  const ParticipantRenderer = participantRenderer ?? ParticipantView;\n  const ControlRenderer = controlRenderer ?? ControlsView;\n\n  // find first participant with screen shared\n  let screenTrack: VideoTrack | undefined;\n  sortedParticipants.forEach((p) => {\n    if (screenTrack) {\n      return;\n    }\n    const track = p.getTrack(Track.Source.ScreenShare);\n    if (track?.isSubscribed && track.videoTrack) {\n      screenTrack = track.videoTrack;\n    }\n  });\n\n  let otherParticipants = sortedParticipants;\n  let participantInFocus: Participant;\n  let mainView: ReactElement;\n  if (screenTrack) {\n    mainView = <ScreenShareView track={screenTrack} height=\"100%\" width=\"100%\" />;\n  } else if (otherParticipants.length === 0) {\n    mainView = <div>no one is in the room</div>;\n  } else {\n    [participantInFocus, ...otherParticipants] = otherParticipants;\n    mainView = (\n      <ParticipantRenderer\n        key={participantInFocus.identity}\n        participant={participantInFocus}\n        showOverlay={showOverlay}\n        width=\"100%\"\n        height=\"100%\"\n        orientation=\"portrait\"\n        showConnectionQuality\n        onMouseEnter={() => setShowOverlay(true)}\n        onMouseLeave={() => setShowOverlay(false)}\n      />\n    );\n  }\n\n  return (\n    // global container\n    <div className={styles.container}>\n      <div className={styles.stage}>{mainView}</div>\n      <div className={styles.participantsArea}>\n        {otherParticipants.map((participant) => {\n          return (\n            <ParticipantRenderer\n              key={participant.identity}\n              participant={participant}\n              className={styles.participant}\n              aspectWidth={4}\n              aspectHeight={3}\n              showOverlay={showOverlay}\n              onMouseEnter={() => setShowOverlay(true)}\n              onMouseLeave={() => setShowOverlay(false)}\n            />\n          );\n        })}\n      </div>\n      <div className={styles.controlsArea}>\n        <ControlRenderer room={room} enableScreenShare={false} onLeave={onLeave} />\n      </div>\n    </div>\n  );\n};\n","import { faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Track, VideoTrack } from 'livekit-client';\nimport { AudioRenderer } from '@livekit/react-core';\nimport React, { ReactElement, useContext } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { GridStage } from './desktop/GridStage';\nimport { SpeakerStage } from './desktop/SpeakerStage';\nimport { DisplayContext } from './DisplayContext';\nimport { MobileStage } from './mobile/MobileStage';\nimport { StageProps } from './StageProps';\nimport styles from './styles.module.css';\n\nexport const StageView = (stageProps: StageProps) => {\n  const isMobile = useMediaQuery({ query: '(max-width: 800px)' });\n  const { room, participants } = stageProps.roomState;\n  const context = useContext(DisplayContext);\n\n  let mainElement: ReactElement;\n  if (isMobile) {\n    mainElement = <MobileStage {...stageProps} />;\n  } else {\n    // find first participant with screen shared\n    let screenTrack: VideoTrack | undefined;\n    participants.forEach((p) => {\n      if (screenTrack) {\n        return;\n      }\n      const track = p.getTrack(Track.Source.ScreenShare);\n      if (track?.isSubscribed && track.videoTrack) {\n        screenTrack = track.videoTrack;\n      }\n    });\n\n    if (context.stageLayout === 'grid' && screenTrack === undefined) {\n      mainElement = <GridStage {...stageProps} />;\n    } else {\n      mainElement = <SpeakerStage {...stageProps} />;\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      {mainElement}\n      {stageProps.roomState.audioTracks.map((track) => (\n        <AudioRenderer key={track.sid} track={track} isLocal={false} />\n      ))}\n\n      {room?.canPlaybackAudio === false && (\n        <div className={styles.overlay}>\n          <button\n            className={styles.unmuteButton}\n            onClick={() => {\n              room.startAudio();\n            }}\n          >\n            <FontAwesomeIcon className={styles.icon} size=\"1x\" icon={faVolumeMute} />\n            Click to Unmute\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Room, RoomOptions, RoomConnectOptions, ConnectionState } from 'livekit-client';\nimport React, { useEffect } from 'react';\nimport { ControlsProps } from './components/ControlsView';\nimport { ParticipantProps } from './components/ParticipantView';\nimport { StageProps } from './components/StageProps';\nimport { StageView } from './components/StageView';\nimport { useRoom } from '@livekit/react-core';\n\nexport interface RoomProps {\n  url: string;\n  token: string;\n  roomOptions?: RoomOptions;\n  connectOptions?: RoomConnectOptions;\n  // when first connected to room\n  onConnected?: (room: Room) => void;\n  // when user leaves the room\n  onLeave?: (room: Room) => void;\n  stageRenderer?: (props: StageProps) => React.ReactElement | null;\n  participantRenderer?: (props: ParticipantProps) => React.ReactElement | null;\n  controlRenderer?: (props: ControlsProps) => React.ReactElement | null;\n}\n\nexport const LiveKitRoom = ({\n  url,\n  token,\n  roomOptions,\n  connectOptions,\n  stageRenderer,\n  participantRenderer,\n  controlRenderer,\n  onConnected,\n  onLeave,\n}: RoomProps) => {\n  const roomState = useRoom(roomOptions);\n\n  useEffect(() => {\n    roomState.connect(url, token, connectOptions).then((room) => {\n      if (!room) {\n        return;\n      }\n      if (onConnected && room.state === ConnectionState.Connected) {\n        onConnected(room);\n      }\n    });\n  }, []);\n\n  const selectedStageRenderer = stageRenderer ?? StageView;\n\n  return selectedStageRenderer({\n    roomState,\n    participantRenderer,\n    controlRenderer,\n    onLeave,\n  });\n};\n"],"names":["ControlButton","label","disabled","onClick","icon","className","menuItems","popoverContainerClassName","popoverTriggerBtnClassName","popoverTriggerBtnSeparatorClassName","onMenuItemClick","useState","menuVisible","setMenuVisible","classes","styles","button","handleMenuClick","item","menuTrigger","menu","React","length","hasDropdown","dropdown","separator","FontAwesomeIcon","height","faChevronDown","popoverMenu","list","map","i","key","mainContent","Popover","isOpen","positions","content","buttonWrapper","AudioSelectButton","isMuted","onSourceSelected","isButtonDisabled","muteText","unmuteText","sources","setSources","setMenuItems","listAudioDevices","useCallback","Room","getLocalDevices","devices","useEffect","navigator","mediaDevices","addEventListener","removeEventListener","handleMenuItem","device","find","d","faMicrophoneSlash","faMicrophone","VideoSelectButton","isEnabled","disableText","enableText","listVideoDevices","faVideo","faVideoSlash","ControlsView","room","enableScreenShare","enableAudio","enableVideo","onLeave","useParticipant","localParticipant","camPub","cameraPublication","micPub","microphonePublication","undefined","audioButtonDisabled","setAudioButtonDisabled","muteButton","enabled","setMicrophoneEnabled","switchActiveDevice","deviceId","videoButtonDisabled","setVideoButtonDisabled","videoButton","setCameraEnabled","screenButtonDisabled","setScreenButtonDisabled","screenButton","isScreenShareEnabled","faStop","faDesktop","setScreenShareEnabled","controlsWrapper","dangerButton","disconnect","DisplayContext","createContext","stageLayout","showStats","ParticipantView","participant","width","speakerClassName","aspectWidth","aspectHeight","orientation","displayName","showOverlay","showConnectionQuality","onMouseEnter","onMouseLeave","isLocal","connectionQuality","isSpeaking","videoSize","setVideoSize","currentBitrate","setCurrentBitrate","context","useContext","handleResize","interval","setInterval","total","tracks","forEach","pub","track","LocalTrack","RemoteTrack","clearInterval","containerStyles","objectFit","videoOrientation","dimensions","name","identity","mainElement","isSubscribed","VideoRenderer","video","onSizeChanged","placeholder","push","speaker","isAudioMuted","isMicrophoneEnabled","statsContent","stats","Math","round","ConnectionQualityIndicator","ConnectionQuality","Excellent","connectionQuality3","Good","connectionQuality2","Poor","connectionQuality1","join","style","AspectRatio","ratio","participantBar","center","iconRed","iconNormal","ScreenShareView","screenShare","GridStage","roomState","participantRenderer","controlRenderer","isConnecting","error","participants","visibleParticipants","setVisibleParticipants","setShowOverlay","grid1x1","gridClass","setGridClass","numVisible","grid2x1","grid2x2","min","grid3x3","grid4x4","grid5x5","newParticipants","p","has","sid","activeSpeakers","includes","idx","findIndex","splice","message","ParticipantRenderer","ControlRenderer","container","gridStage","controlsArea","defaultSortParticipants","sortedParticipants","sort","a","b","audioLevel","lastSpokeAt","aLast","getTime","bLast","aVideo","videoTracks","size","bVideo","joinedAt","LocalParticipant","localIdx","indexOf","SpeakerStage","sortParticipants","sortFn","setSortedParticipants","screenTrack","getTrack","Track","Source","ScreenShare","videoTrack","otherParticipants","participantInFocus","mainView","stage","stageCenter","sidebar","MobileStage","participantsArea","StageView","stageProps","isMobile","useMediaQuery","query","audioTracks","AudioRenderer","canPlaybackAudio","overlay","unmuteButton","startAudio","faVolumeMute","LiveKitRoom","url","token","roomOptions","connectOptions","stageRenderer","onConnected","useRoom","connect","then","state","ConnectionState","Connected","selectedStageRenderer"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@livekit/react-components/src/components/AudioSelectButton.tsx b/node_modules/@livekit/react-components/src/components/AudioSelectButton.tsx
index 1a2dce5..9f53010 100644
--- a/node_modules/@livekit/react-components/src/components/AudioSelectButton.tsx
+++ b/node_modules/@livekit/react-components/src/components/AudioSelectButton.tsx
@@ -21,8 +21,8 @@ export const AudioSelectButton = ({
   onClick,
   onSourceSelected,
   isButtonDisabled,
-  muteText = 'Mute',
-  unmuteText = 'Unmute',
+  muteText = 'Mute?',
+  unmuteText = 'Unmute!',
   className,
   popoverContainerClassName,
   popoverTriggerBtnClassName,
diff --git a/node_modules/@livekit/react-components/yalc.sig b/node_modules/@livekit/react-components/yalc.sig
new file mode 100644
index 0000000..4b142b1
--- /dev/null
+++ b/node_modules/@livekit/react-components/yalc.sig
@@ -0,0 +1 @@
+3c670e31235cdd591c950bbbf1bab62e
\ No newline at end of file
